Search.setIndex({"docnames": ["about", "bibliography", "index", "installation", "reference/libcasm/_autosummary/libcasm.clexmonte", "reference/libcasm/_autosummary/libcasm.clexmonte.EventData", "reference/libcasm/_autosummary/libcasm.clexmonte.EventData.event", "reference/libcasm/_autosummary/libcasm.clexmonte.EventData.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.EventData.unitcell_index", "reference/libcasm/_autosummary/libcasm.clexmonte.EventID", "reference/libcasm/_autosummary/libcasm.clexmonte.EventID.copy", "reference/libcasm/_autosummary/libcasm.clexmonte.EventID.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.EventID.prim_event_index", "reference/libcasm/_autosummary/libcasm.clexmonte.EventID.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.EventID.unitcell_index", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.Ekra", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.dE_activated", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.dE_final", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.formation_energy_delta_corr", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.freq", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.is_allowed", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.is_normal", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.local_corr", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.rate", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.FindMinPotentialConfigs", "reference/libcasm/_autosummary/libcasm.clexmonte.FindMinPotentialConfigs.check", "reference/libcasm/_autosummary/libcasm.clexmonte.FindMinPotentialConfigs.reset", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.methodname", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.append", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.completed_runs", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.is_complete", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.methodname", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.n_completed_runs", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.next_state", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.read_completed_runs", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.write_completed_runs", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.atom_name_index_list", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.atom_positions_cart", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.prev_atom_positions_cart", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.prev_time", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.prev_unique_atom_id", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.sampling_fixture", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.sampling_fixture_label", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.time", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.total_rate", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.unique_atom_id", "reference/libcasm/_autosummary/libcasm.clexmonte.LocalOrbitCompositionCalculator", "reference/libcasm/_autosummary/libcasm.clexmonte.LocalOrbitCompositionCalculator.combine_orbits", "reference/libcasm/_autosummary/libcasm.clexmonte.LocalOrbitCompositionCalculator.local_orbits_sites", "reference/libcasm/_autosummary/libcasm.clexmonte.LocalOrbitCompositionCalculator.orbits_to_calculate", "reference/libcasm/_autosummary/libcasm.clexmonte.LocalOrbitCompositionCalculator.value", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.add_discrete_vector_float_function", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.add_discrete_vector_int_function", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.add_generic_function", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.add_partitioned_histogram_function", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.analysis_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.collect", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.collect_hop_correlations", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.do_not_collect", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.do_not_collect_hop_correlations", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.evaluate", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.event_data", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.event_data_summary", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.json_sampling_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.kinetics_data", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.make_default_sampling_fixture_params", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.make_occ_location", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.make_sampling_fixture_params_from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.modifying_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.name", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.potential", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.run", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.run_fixture", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.run_manager", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.sampling_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.selected_event", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.selected_event_data", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.selected_event_function_params", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.selected_event_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.set_event_data", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.set_state_and_potential", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.state_data", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.system", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.time_sampling_allowed", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.conditions", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.configuration", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.properties", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.event_impact", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.event_list", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.event_rate", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.event_state", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.event_to_apply", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.prim_event_list", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventDataSummary", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventDataSummary.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventList", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventList.total_rate", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.occ_delta_per_supercell", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.per_supercell", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.per_unitcell", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.state_data", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.equivalent_index", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.event", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.event_type_name", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.is_forward", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.occ_final", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.occ_init", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.prim_event_index", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.sites", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventList", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventList.append", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventList.clear", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventList.extend", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventList.insert", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventList.pop", "reference/libcasm/_autosummary/libcasm.clexmonte.Results", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.analysis", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.analysis_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.completion_check_results", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.elapsed_clocktime", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.json_sampler_names", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.json_samplers", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.json_sampling_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.n_accept", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.n_reject", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_clocktime", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_count", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_time", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_trajectory", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_weight", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sampler_names", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.samplers", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sampling_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.component_names", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.description", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.function", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.name", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.shape", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.items", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.keys", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.values", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.conditions", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.final_state", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.initial_state", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.n_unitcells", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.transformation_matrix_to_super", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.do_save_all_final_states", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.do_save_all_initial_states", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.do_save_last_final_state", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.output_dir", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.write_final_states", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.write_initial_states", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.write_prim_basis", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.engine", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.global_cutoff", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.run_index", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.sampling_fixture", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.sampling_fixture_labels", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.sampling_fixtures", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.count", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.label", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.n_pass", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.n_step", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.params", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.results", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.sample_mode", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.steps_per_pass", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.add_analysis_function", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.add_json_sampling_function", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.add_sampling_function", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.analysis_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.analysis_names", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.append_to_analysis_names", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.clear_cutoffs", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.completion_check_params", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.converge", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.do_not_converge", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.do_not_perform_analysis", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.do_not_sample", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.extend_analysis_names", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.json_sampling_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.label", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.method_log", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.perform_analysis", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.remove_from_analysis_names", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sample", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sample_by_pass", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sample_by_step", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sample_by_time", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sampling_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sampling_params", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_completion_check_spacing", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_io_params", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_max_clocktime", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_max_count", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_max_sample", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_max_time", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_min_clocktime", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_min_count", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_min_sample", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_min_time", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.event_data", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.event_id", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.event_index", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.event_state", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.prim_event_data", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.time_increment", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.total_rate", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.clex", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.convert", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.corr", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_clex", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_corr", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_multiclex", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_orbit_composition_calculator", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.multiclex", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.n_unitcells", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.occ_location", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.order_parameter", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.state", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.system", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.transformation_matrix_to_super", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.description", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.function", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.name", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.items", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.keys", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.values", "reference/libcasm/_autosummary/libcasm.clexmonte.System", "reference/libcasm/_autosummary/libcasm.clexmonte.System.additional_params", "reference/libcasm/_autosummary/libcasm.clexmonte.System.basis_set", "reference/libcasm/_autosummary/libcasm.clexmonte.System.basis_set_cluster_info", "reference/libcasm/_autosummary/libcasm.clexmonte.System.basis_set_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.canonical_swaps", "reference/libcasm/_autosummary/libcasm.clexmonte.System.clex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.clex_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.composition_calculator", "reference/libcasm/_autosummary/libcasm.clexmonte.System.composition_converter", "reference/libcasm/_autosummary/libcasm.clexmonte.System.dof_space", "reference/libcasm/_autosummary/libcasm.clexmonte.System.dof_space_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.dof_subspace_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.equivalents_info", "reference/libcasm/_autosummary/libcasm.clexmonte.System.event_system", "reference/libcasm/_autosummary/libcasm.clexmonte.System.event_type_names", "reference/libcasm/_autosummary/libcasm.clexmonte.System.events", "reference/libcasm/_autosummary/libcasm.clexmonte.System.from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_basis_set", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_clex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_local_basis_set", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_local_clex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_local_multiclex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_multiclex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_basis_set", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_basis_set_cluster_info", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_basis_set_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_clex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_clex_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_multiclex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_multiclex_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_orbit_composition_calculator", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_orbit_composition_calculator_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.make_default_configuration", "reference/libcasm/_autosummary/libcasm.clexmonte.System.make_default_state", "reference/libcasm/_autosummary/libcasm.clexmonte.System.multiclex", "reference/libcasm/_autosummary/libcasm.clexmonte.System.multiclex_keys", "reference/libcasm/_autosummary/libcasm.clexmonte.System.n_dimensions", "reference/libcasm/_autosummary/libcasm.clexmonte.System.occevent_symgroup_rep", "reference/libcasm/_autosummary/libcasm.clexmonte.System.order_parameter", "reference/libcasm/_autosummary/libcasm.clexmonte.System.order_parameter_subspaces", "reference/libcasm/_autosummary/libcasm.clexmonte.System.prim", "reference/libcasm/_autosummary/libcasm.clexmonte.System.prim_event_list", "reference/libcasm/_autosummary/libcasm.clexmonte.System.prim_neighbor_list", "reference/libcasm/_autosummary/libcasm.clexmonte.System.semigrand_canonical_multiswaps", "reference/libcasm/_autosummary/libcasm.clexmonte.System.semigrand_canonical_swaps", "reference/libcasm/_autosummary/libcasm.clexmonte.System.species_list", "reference/libcasm/_autosummary/libcasm.clexmonte.System.xtal_prim", "reference/libcasm/_autosummary/libcasm.clexmonte.enforce_composition", "reference/libcasm/_autosummary/libcasm.clexmonte.make_canonical_initial_state", "reference/libcasm/_autosummary/libcasm.clexmonte.make_initial_state", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.optional_from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.required_array_from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.required_from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.required_int_array_from_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.to_dict", "reference/libcasm/_autosummary/libcasm.clexmonte.print_selected_event_functions", "reference/libcasm/_autosummary/libcasm.clexmonte.scale_supercell", "reference/libcasm/index", "usage", "usage/overview"], "filenames": ["about.rst", "bibliography.rst", "index.rst", "installation.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventData.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventData.event.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventData.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventData.unitcell_index.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventID.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventID.copy.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventID.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventID.prim_event_index.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventID.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventID.unitcell_index.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.Ekra.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.dE_activated.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.dE_final.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.formation_energy_delta_corr.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.freq.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.is_allowed.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.is_normal.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.local_corr.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.rate.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.EventState.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FindMinPotentialConfigs.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FindMinPotentialConfigs.check.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FindMinPotentialConfigs.reset.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.methodname.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.FixedConfigGenerator.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.append.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.completed_runs.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.is_complete.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.methodname.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.n_completed_runs.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.next_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.read_completed_runs.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.IncrementalConditionsStateGenerator.write_completed_runs.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.atom_name_index_list.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.atom_positions_cart.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.prev_atom_positions_cart.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.prev_time.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.prev_unique_atom_id.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.sampling_fixture.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.sampling_fixture_label.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.time.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.total_rate.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.KineticsData.unique_atom_id.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.LocalOrbitCompositionCalculator.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.LocalOrbitCompositionCalculator.combine_orbits.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.LocalOrbitCompositionCalculator.local_orbits_sites.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.LocalOrbitCompositionCalculator.orbits_to_calculate.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.LocalOrbitCompositionCalculator.value.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.add_discrete_vector_float_function.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.add_discrete_vector_int_function.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.add_generic_function.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.add_partitioned_histogram_function.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.analysis_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.collect.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.collect_hop_correlations.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.do_not_collect.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.do_not_collect_hop_correlations.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.evaluate.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.event_data.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.event_data_summary.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.json_sampling_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.kinetics_data.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.make_default_sampling_fixture_params.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.make_occ_location.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.make_sampling_fixture_params_from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.modifying_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.name.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.potential.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.run.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.run_fixture.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.run_manager.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.sampling_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.selected_event.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.selected_event_data.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.selected_event_function_params.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.selected_event_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.set_event_data.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.set_state_and_potential.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.state_data.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.system.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCalculator.time_sampling_allowed.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.conditions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.configuration.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.properties.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteCarloState.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.event_impact.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.event_list.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.event_rate.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.event_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.event_to_apply.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventData.prim_event_list.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventDataSummary.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventDataSummary.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventList.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MonteEventList.total_rate.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.occ_delta_per_supercell.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.per_supercell.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.per_unitcell.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.MontePotential.state_data.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.equivalent_index.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.event.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.event_type_name.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.is_forward.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.occ_final.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.occ_init.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.prim_event_index.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.sites.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventData.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventList.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventList.append.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventList.clear.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventList.extend.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventList.insert.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.PrimEventList.pop.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.analysis.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.analysis_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.completion_check_results.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.elapsed_clocktime.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.json_sampler_names.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.json_samplers.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.json_sampling_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.n_accept.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.n_reject.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_clocktime.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_count.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_time.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_trajectory.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sample_weight.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sampler_names.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.samplers.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.Results.sampling_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.component_names.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.description.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.function.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.name.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunction.shape.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.items.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.ResultsAnalysisFunctionMap.values.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.conditions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.final_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.initial_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.n_unitcells.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunData.transformation_matrix_to_super.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.do_save_all_final_states.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.do_save_all_initial_states.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.do_save_last_final_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.output_dir.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.write_final_states.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.write_initial_states.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunDataOutputParams.write_prim_basis.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.engine.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.global_cutoff.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.run_index.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.sampling_fixture.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.sampling_fixture_labels.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.RunManager.sampling_fixtures.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.count.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.label.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.n_pass.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.n_step.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.params.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.results.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.sample_mode.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixture.steps_per_pass.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.add_analysis_function.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.add_json_sampling_function.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.add_sampling_function.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.analysis_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.analysis_names.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.append_to_analysis_names.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.clear_cutoffs.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.completion_check_params.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.converge.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.do_not_converge.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.do_not_perform_analysis.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.do_not_sample.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.extend_analysis_names.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.json_sampling_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.label.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.method_log.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.perform_analysis.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.remove_from_analysis_names.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sample.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sample_by_pass.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sample_by_step.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sample_by_time.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sampling_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.sampling_params.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_completion_check_spacing.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_io_params.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_max_clocktime.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_max_count.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_max_sample.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_max_time.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_min_clocktime.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_min_count.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_min_sample.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.set_min_time.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SamplingFixtureParams.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.event_data.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.event_id.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.event_index.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.event_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.prim_event_data.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.time_increment.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.SelectedEvent.total_rate.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.clex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.convert.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.corr.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_clex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_corr.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_multiclex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.local_orbit_composition_calculator.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.multiclex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.n_unitcells.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.occ_location.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.order_parameter.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.system.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateData.transformation_matrix_to_super.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.description.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.function.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunction.name.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.items.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.StateModifyingFunctionMap.values.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.additional_params.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.basis_set.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.basis_set_cluster_info.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.basis_set_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.canonical_swaps.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.clex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.clex_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.composition_calculator.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.composition_converter.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.dof_space.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.dof_space_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.dof_subspace_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.equivalents_info.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.event_system.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.event_type_names.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.events.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_basis_set.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_clex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_local_basis_set.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_local_clex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_local_multiclex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.is_multiclex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_basis_set.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_basis_set_cluster_info.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_basis_set_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_clex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_clex_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_multiclex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_multiclex_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_orbit_composition_calculator.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.local_orbit_composition_calculator_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.make_default_configuration.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.make_default_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.multiclex.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.multiclex_keys.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.n_dimensions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.occevent_symgroup_rep.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.order_parameter.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.order_parameter_subspaces.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.prim.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.prim_event_list.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.prim_neighbor_list.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.semigrand_canonical_multiswaps.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.semigrand_canonical_swaps.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.species_list.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.System.xtal_prim.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.enforce_composition.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.make_canonical_initial_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.make_initial_state.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.optional_from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.required_array_from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.required_from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.required_int_array_from_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.parsing.to_dict.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.print_selected_event_functions.rst", "reference/libcasm/_autosummary/libcasm.clexmonte.scale_supercell.rst", "reference/libcasm/index.rst", "usage.rst", "usage/overview.rst"], "titles": ["About", "Bibliography", "libcasm-clexmonte", "Installation", "libcasm.clexmonte", "EventData", "event", "to_dict", "unitcell_index", "EventID", "copy", "from_dict", "prim_event_index", "to_dict", "unitcell_index", "EventState", "Ekra", "dE_activated", "dE_final", "formation_energy_delta_corr", "freq", "is_allowed", "is_normal", "local_corr", "rate", "to_dict", "FindMinPotentialConfigs", "check", "reset", "FixedConfigGenerator", "from_dict", "methodname", "to_dict", "IncrementalConditionsStateGenerator", "append", "completed_runs", "from_dict", "is_complete", "methodname", "n_completed_runs", "next_state", "read_completed_runs", "to_dict", "write_completed_runs", "KineticsData", "atom_name_index_list", "atom_positions_cart", "prev_atom_positions_cart", "prev_time", "prev_unique_atom_id", "sampling_fixture", "sampling_fixture_label", "time", "total_rate", "unique_atom_id", "LocalOrbitCompositionCalculator", "combine_orbits", "local_orbits_sites", "orbits_to_calculate", "value", "MonteCalculator", "add_discrete_vector_float_function", "add_discrete_vector_int_function", "add_generic_function", "add_partitioned_histogram_function", "analysis_functions", "collect", "collect_hop_correlations", "do_not_collect", "do_not_collect_hop_correlations", "evaluate", "event_data", "event_data_summary", "json_sampling_functions", "kinetics_data", "make_default_sampling_fixture_params", "make_occ_location", "make_sampling_fixture_params_from_dict", "modifying_functions", "name", "potential", "run", "run_fixture", "run_manager", "sampling_functions", "selected_event", "selected_event_data", "selected_event_function_params", "selected_event_functions", "set_event_data", "set_state_and_potential", "state_data", "system", "time_sampling_allowed", "MonteCarloState", "conditions", "configuration", "from_dict", "properties", "to_dict", "MonteEventData", "event_impact", "event_list", "event_rate", "event_state", "event_to_apply", "prim_event_list", "MonteEventDataSummary", "to_dict", "MonteEventList", "total_rate", "MontePotential", "occ_delta_per_supercell", "per_supercell", "per_unitcell", "state_data", "PrimEventData", "equivalent_index", "event", "event_type_name", "is_forward", "occ_final", "occ_init", "prim_event_index", "sites", "to_dict", "PrimEventList", "append", "clear", "extend", "insert", "pop", "Results", "analysis", "analysis_functions", "completion_check_results", "elapsed_clocktime", "json_sampler_names", "json_samplers", "json_sampling_functions", "n_accept", "n_reject", "sample_clocktime", "sample_count", "sample_time", "sample_trajectory", "sample_weight", "sampler_names", "samplers", "sampling_functions", "ResultsAnalysisFunction", "component_names", "description", "function", "name", "shape", "ResultsAnalysisFunctionMap", "items", "keys", "values", "RunData", "conditions", "final_state", "from_dict", "initial_state", "n_unitcells", "to_dict", "transformation_matrix_to_super", "RunDataOutputParams", "do_save_all_final_states", "do_save_all_initial_states", "do_save_last_final_state", "from_dict", "output_dir", "to_dict", "write_final_states", "write_initial_states", "write_prim_basis", "RunManager", "engine", "global_cutoff", "run_index", "sampling_fixture", "sampling_fixture_labels", "sampling_fixtures", "SamplingFixture", "count", "label", "n_pass", "n_step", "params", "results", "sample_mode", "steps_per_pass", "SamplingFixtureParams", "add_analysis_function", "add_json_sampling_function", "add_sampling_function", "analysis_functions", "analysis_names", "append_to_analysis_names", "clear_cutoffs", "completion_check_params", "converge", "do_not_converge", "do_not_perform_analysis", "do_not_sample", "extend_analysis_names", "from_dict", "json_sampling_functions", "label", "method_log", "perform_analysis", "remove_from_analysis_names", "sample", "sample_by_pass", "sample_by_step", "sample_by_time", "sampling_functions", "sampling_params", "set_completion_check_spacing", "set_io_params", "set_max_clocktime", "set_max_count", "set_max_sample", "set_max_time", "set_min_clocktime", "set_min_count", "set_min_sample", "set_min_time", "to_dict", "SelectedEvent", "event_data", "event_id", "event_index", "event_state", "prim_event_data", "time_increment", "total_rate", "StateData", "clex", "convert", "corr", "local_clex", "local_corr", "local_multiclex", "local_orbit_composition_calculator", "multiclex", "n_unitcells", "occ_location", "order_parameter", "state", "system", "transformation_matrix_to_super", "StateModifyingFunction", "description", "function", "name", "StateModifyingFunctionMap", "items", "keys", "values", "System", "additional_params", "basis_set", "basis_set_cluster_info", "basis_set_keys", "canonical_swaps", "clex", "clex_keys", "composition_calculator", "composition_converter", "dof_space", "dof_space_keys", "dof_subspace_keys", "equivalents_info", "event_system", "event_type_names", "events", "from_dict", "is_basis_set", "is_clex", "is_local_basis_set", "is_local_clex", "is_local_multiclex", "is_multiclex", "local_basis_set", "local_basis_set_cluster_info", "local_basis_set_keys", "local_clex", "local_clex_keys", "local_multiclex", "local_multiclex_keys", "local_orbit_composition_calculator", "local_orbit_composition_calculator_keys", "make_default_configuration", "make_default_state", "multiclex", "multiclex_keys", "n_dimensions", "occevent_symgroup_rep", "order_parameter", "order_parameter_subspaces", "prim", "prim_event_list", "prim_neighbor_list", "semigrand_canonical_multiswaps", "semigrand_canonical_swaps", "species_list", "xtal_prim", "enforce_composition", "make_canonical_initial_state", "make_initial_state", "libcasm.clexmonte.parsing", "optional_from_dict", "required_array_from_dict", "required_from_dict", "required_int_array_from_dict", "to_dict", "print_selected_event_functions", "scale_supercell", "Reference (libcasm)", "Usage", "Overview"], "terms": {"libcasm": [0, 3, 5, 9, 15, 26, 27, 29, 33, 44, 50, 55, 60, 83, 94, 100, 107, 109, 111, 116, 126, 129, 131, 132, 135, 139, 149, 150, 156, 157, 158, 159, 160, 168, 178, 185, 194, 231, 239, 241, 245, 247, 254, 256, 258, 259, 260, 261, 262, 265, 267, 287, 291, 297, 306, 307, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 323], "clexmont": [0, 3, 5, 9, 15, 26, 29, 33, 44, 50, 55, 60, 83, 94, 100, 107, 109, 111, 116, 126, 129, 131, 132, 150, 156, 160, 168, 178, 185, 194, 231, 239, 254, 256, 258, 262, 304, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 323], "i": [0, 2, 3, 5, 6, 9, 21, 22, 27, 29, 33, 36, 41, 45, 46, 47, 48, 49, 52, 54, 55, 57, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 72, 75, 76, 81, 82, 87, 88, 89, 90, 94, 99, 100, 104, 105, 108, 120, 126, 130, 131, 150, 151, 156, 160, 166, 168, 171, 178, 180, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 239, 254, 256, 258, 262, 265, 278, 287, 293, 302, 310, 311, 312, 320, 323], "part": [0, 2], "casm": [0, 3, 4, 304, 323], "project": 0, "develop": [0, 2, 323], "van": [0, 2], "der": [0, 2], "ven": [0, 2], "group": [0, 2, 26, 29, 275, 300, 311, 312], "origin": [0, 2, 106, 124, 304], "univers": [0, 2], "michigan": [0, 2], "current": [0, 2, 21, 23, 29, 46, 47, 50, 51, 52, 54, 61, 62, 63, 71, 72, 74, 76, 80, 81, 82, 83, 89, 90, 91, 94, 100, 102, 103, 104, 105, 108, 112, 113, 114, 115, 181, 186, 188, 189, 239, 241, 246, 248, 249, 250, 251, 253, 310, 323], "california": [0, 2], "santa": [0, 2], "barbara": [0, 2], "thi": [0, 2, 33, 36, 45, 46, 47, 48, 50, 51, 52, 53, 61, 62, 63, 64, 67, 72, 85, 86, 87, 88, 90, 93, 100, 104, 105, 108, 123, 199, 235, 278, 293, 323], "packag": [0, 2, 323], "provid": [0, 5, 26, 29, 34, 36, 61, 62, 81, 82, 85, 89, 90, 94, 98, 100, 125, 239, 245, 247, 291, 297, 310, 311, 312, 323], "python": [0, 7, 10, 11, 13, 25, 30, 32, 36, 42, 67, 77, 97, 99, 125, 163, 166, 172, 174, 208, 230, 279], "interfac": [0, 60, 100, 111, 323], "librari": 0, "learn": 0, "more": [0, 2, 33, 125, 178, 215, 216, 217, 235, 293, 323], "here": [0, 311, 312], "The": [2, 3, 27, 29, 30, 32, 33, 35, 36, 40, 42, 45, 49, 51, 54, 55, 57, 58, 59, 60, 64, 66, 67, 70, 71, 72, 74, 75, 80, 81, 82, 83, 90, 91, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 125, 137, 147, 153, 166, 167, 194, 195, 196, 197, 203, 204, 205, 206, 208, 212, 214, 215, 216, 217, 220, 221, 230, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 262, 264, 265, 267, 268, 272, 275, 277, 278, 286, 287, 289, 291, 293, 295, 296, 297, 301, 302, 306, 307, 310, 311, 312, 319, 320, 323], "cluster": [2, 3, 4, 55, 57, 59, 60, 72, 75, 94, 108, 125, 239, 240, 243, 245, 247, 262, 264, 265, 268, 269, 275, 278, 281, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 297, 298, 305, 323], "expans": [2, 3, 4, 60, 72, 75, 94, 108, 239, 240, 243, 245, 247, 262, 264, 268, 269, 275, 278, 281, 283, 284, 285, 286, 289, 290, 291, 292, 297, 298, 305, 323], "mont": [2, 4, 26, 29, 33, 44, 60, 61, 62, 63, 64, 75, 94, 98, 100, 107, 111, 132, 135, 139, 149, 157, 158, 159, 160, 162, 164, 165, 167, 178, 185, 194, 208, 221, 235, 239, 241, 254, 256, 259, 260, 261, 267, 306, 307, 311, 312, 322], "carlo": [2, 4, 26, 29, 33, 44, 60, 61, 62, 63, 64, 75, 94, 98, 100, 107, 111, 132, 160, 162, 164, 165, 167, 178, 185, 194, 208, 221, 235, 239, 267, 306, 307, 311, 312, 322], "includ": [2, 72, 75, 89, 106, 108, 125, 160, 168, 212, 279, 293, 304, 308, 311, 323], "canon": [2, 60, 75, 267, 306, 307, 310, 311, 312, 323], "semi": [2, 60, 75, 306, 307, 310], "grand": [2, 60, 75, 306, 307, 310], "calcul": [2, 15, 26, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 72, 75, 76, 79, 80, 85, 86, 87, 88, 89, 90, 93, 94, 98, 100, 104, 107, 108, 111, 112, 113, 114, 115, 150, 208, 215, 216, 217, 235, 240, 242, 243, 244, 245, 246, 247, 250, 254, 262, 264, 268, 270, 272, 280, 282, 286, 289, 291, 293, 294, 297, 301, 310, 311, 312, 319, 323], "kinet": [2, 44, 60, 74, 75, 235, 262, 299, 323], "n": [2, 52, 59, 61, 62, 75, 150, 151, 155, 215, 216, 217, 220, 310], "fold": 2, "wai": 2, "composit": [2, 55, 56, 59, 75, 246, 254, 262, 270, 271, 293, 294, 310, 311, 323], "order": [2, 59, 61, 62, 63, 70, 72, 75, 97, 108, 150, 151, 245, 247, 250, 262, 272, 278, 291, 297, 301, 302, 323], "paramet": [2, 9, 26, 27, 29, 33, 34, 36, 55, 59, 60, 61, 62, 63, 64, 66, 67, 70, 72, 75, 77, 81, 82, 87, 89, 90, 94, 97, 99, 100, 101, 103, 104, 105, 107, 108, 111, 112, 125, 132, 150, 160, 166, 168, 178, 182, 185, 190, 194, 195, 196, 197, 200, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 239, 240, 242, 243, 244, 245, 246, 247, 250, 254, 256, 262, 263, 264, 265, 268, 272, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 295, 296, 297, 301, 302, 310, 311, 312, 319, 320, 323], "constrain": 2, "sq": 2, "gener": [2, 3, 29, 33, 36, 64, 70, 81, 82, 89, 107, 168, 169, 170, 171, 178, 185, 265, 275, 287, 293, 310, 311, 312, 322], "open": 2, "sourc": [2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 41, 42, 43, 160, 163, 166, 168, 172, 174, 293, 311, 312, 314, 315, 316, 317, 318, 319, 320], "softwar": 2, "which": [2, 29, 33, 55, 59, 62, 63, 67, 70, 72, 75, 97, 100, 108, 111, 194, 199, 215, 216, 217, 221, 245, 247, 263, 291, 293, 297, 310, 311, 312, 320, 323], "design": 2, "perform": [2, 81, 82, 195, 205, 212, 311, 323], "first": [2, 27, 33, 63, 64, 66, 70, 76, 89, 311, 312, 320], "principl": 2, "statist": 2, "mechan": 2, "studi": 2, "multi": [2, 75, 245, 247, 284, 285, 291, 292, 297, 298, 306], "compon": [2, 59, 61, 62, 150, 151, 203, 204, 295, 296], "crystallin": 2, "solid": 2, "For": [2, 52, 61, 62, 72, 97, 99, 108, 220, 293, 323], "inform": [2, 75, 85, 125, 194, 221, 303], "see": [2, 3, 60, 97, 99, 215, 216, 217], "homepag": 2, "gnu": 2, "lesser": 2, "public": 2, "lgpl": 2, "pleas": 2, "file": [2, 41, 55, 75, 168, 171, 194, 211, 221, 279, 293, 323], "avail": [2, 85], "github": 2, "instal": 2, "usag": [2, 168, 171, 254], "overview": [2, 322], "refer": [2, 50, 61, 62, 63, 64, 99, 104, 105, 279], "bibliographi": 2, "todo": [97, 99, 323], "casmcode_crystallographi": [], "doc": [], "rst": [], "similar": [], "instruct": 3, "function": [4, 33, 36, 46, 47, 61, 62, 63, 64, 65, 66, 68, 70, 73, 75, 78, 84, 88, 94, 104, 105, 126, 129, 131, 133, 134, 137, 139, 147, 149, 150, 152, 154, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 208, 209, 212, 214, 215, 216, 217, 218, 235, 254, 255, 257, 263, 265, 287, 293, 310, 311, 313, 319, 323], "class": [4, 5, 9, 15, 26, 29, 33, 44, 55, 60, 94, 100, 107, 109, 111, 116, 126, 132, 150, 156, 160, 168, 178, 185, 194, 231, 239, 254, 258, 262, 323], "modul": 4, "montecalcul": [26, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 100, 107, 111, 254, 311, 312, 319, 322], "condit": [26, 29, 33, 60, 94, 296, 311, 312, 323], "valuemap": [26, 33, 94, 95, 98, 161, 311, 312, 323], "transformation_matrix_to_sup": [26, 295, 296, 311, 312, 320], "ndarrai": [19, 23, 26, 46, 47, 59, 61, 62, 133, 150, 167, 248, 253, 275, 295, 296, 310, 311, 312, 320], "none": [26, 29, 33, 36, 41, 55, 60, 61, 62, 63, 64, 66, 70, 75, 81, 82, 85, 86, 87, 88, 89, 90, 94, 100, 125, 126, 127, 128, 129, 130, 150, 160, 168, 173, 194, 200, 203, 204, 207, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 239, 249, 254, 310, 311, 312, 314], "isotropic_potenti": [26, 311, 312], "bool": [21, 22, 26, 33, 37, 55, 56, 61, 62, 63, 64, 67, 75, 93, 99, 120, 125, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 180, 194, 208, 220, 221, 280, 281, 282, 283, 284, 285, 293, 311, 312, 318], "true": [21, 26, 33, 55, 56, 57, 59, 61, 62, 63, 64, 67, 75, 93, 99, 125, 166, 168, 178, 180, 194, 220, 221, 235, 280, 281, 282, 283, 284, 285, 293, 311, 312], "tol": [26, 61, 66, 311, 312], "float": [16, 17, 18, 19, 20, 23, 24, 26, 27, 46, 47, 48, 52, 53, 61, 63, 64, 66, 72, 75, 103, 107, 108, 110, 112, 113, 114, 136, 142, 144, 146, 194, 203, 215, 216, 217, 220, 221, 222, 225, 226, 229, 237, 238, 311, 312], "1e": [26, 61, 311, 312], "05": [26, 61, 311, 312], "base": [5, 9, 15, 26, 29, 33, 44, 52, 55, 60, 93, 94, 100, 107, 109, 111, 116, 126, 132, 150, 156, 160, 168, 178, 185, 194, 208, 215, 216, 217, 220, 231, 239, 254, 258, 262], "object": [26, 29, 33, 61, 62, 63, 64, 67, 97, 99, 126, 156, 160, 168, 199, 258], "find": [26, 310, 311, 312, 323], "minimum": [26, 27, 75, 194, 221, 226, 227, 228, 229, 311, 312, 320, 323], "potenti": [26, 27, 75, 76, 89, 90, 100, 111, 112, 113, 114, 239, 311, 312, 323], "configur": [2, 21, 26, 27, 29, 33, 55, 94, 104, 105, 145, 166, 254, 256, 295, 296, 311, 312, 323], "constructor": [5, 9, 26, 29, 33, 34, 44, 55, 60, 87, 94, 100, 107, 111, 126, 132, 150, 160, 168, 178, 185, 194, 231, 239, 254, 262, 323], "A": [26, 29, 33, 36, 50, 55, 61, 62, 63, 64, 76, 82, 89, 97, 104, 125, 150, 151, 153, 185, 254, 256, 262, 263, 266, 269, 273, 274, 278, 279, 288, 290, 292, 294, 295, 296, 298, 304, 311, 312, 320, 323], "access": [26, 44, 55, 61, 62, 63, 64, 190, 191, 239, 293, 311, 312], "union": [26, 27, 33, 55, 56, 72, 94, 108, 293, 311, 312], "dict": [7, 9, 10, 11, 13, 25, 26, 30, 32, 33, 36, 42, 47, 48, 49, 60, 67, 77, 94, 97, 99, 108, 125, 133, 156, 163, 166, 172, 174, 208, 230, 245, 247, 258, 263, 279, 291, 293, 297, 311, 312, 314, 315, 316, 317, 318], "thermodynam": [26, 33, 94, 95, 161, 311, 312, 323], "option": [26, 29, 55, 60, 61, 62, 63, 64, 66, 70, 75, 81, 82, 85, 86, 87, 88, 89, 90, 100, 125, 136, 150, 160, 162, 164, 168, 173, 194, 203, 204, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 239, 249, 251, 254, 256, 293, 310, 311, 312, 314, 315, 316, 317, 318, 323], "np": [26, 46, 47, 61, 62, 133, 167, 248, 253, 275, 310, 311, 312], "If": [26, 27, 29, 33, 55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 70, 75, 81, 82, 85, 86, 87, 88, 89, 90, 94, 99, 100, 125, 150, 151, 166, 178, 180, 194, 203, 215, 216, 217, 220, 221, 235, 239, 293, 310, 311, 312, 323], "onli": [26, 57, 67, 75, 194, 203, 221, 231, 235, 293, 311, 312, 323], "tile": [26, 29, 311, 312], "correspond": [26, 64, 72, 108, 293, 311, 312, 320], "supercel": [8, 9, 14, 26, 27, 29, 30, 36, 55, 72, 97, 108, 112, 113, 163, 165, 167, 248, 253, 295, 296, 311, 312, 320, 323], "consid": [26, 311, 312], "search": [26, 279, 311, 312], "assum": [26, 311, 312], "orient": [26, 308, 311, 312], "doe": [26, 41, 311, 312], "matter": [26, 29, 311, 312], "fals": [21, 26, 55, 56, 57, 59, 64, 67, 75, 93, 99, 166, 168, 171, 174, 194, 220, 221, 293, 311, 312, 318], "appli": [6, 26, 29, 33, 36, 105, 275, 310, 311, 312], "prim": [26, 99, 123, 166, 168, 177, 262, 295, 296, 309, 311, 312, 320, 323], "factor": [26, 29, 275, 311, 312], "check": [26, 37, 75, 135, 178, 185, 194, 201, 202, 220, 280, 281, 282, 283, 284, 285, 311, 312, 323], "all": [26, 37, 55, 56, 57, 66, 67, 68, 72, 75, 89, 108, 116, 129, 134, 168, 169, 170, 178, 180, 194, 201, 203, 208, 220, 221, 235, 293, 295, 296, 304, 308, 311, 312, 323], "possibl": [26, 72, 90, 108, 194, 208, 311, 312], "casmglob": 26, "toler": [26, 61, 66, 311, 312], "identifi": [9, 26, 311, 312], "approxim": [26, 27, 311, 312], "equal": [26, 48, 52, 311, 312, 320], "method": [5, 9, 15, 26, 29, 31, 33, 38, 44, 55, 60, 61, 62, 63, 64, 72, 85, 86, 87, 88, 90, 94, 98, 100, 107, 108, 109, 111, 116, 126, 132, 150, 156, 160, 168, 178, 185, 194, 215, 216, 217, 231, 239, 254, 258, 262, 310, 311, 312, 323], "findminpotentialconfig": [27, 28], "iter": [27, 109, 126, 129, 312], "configurationset": [27, 312], "note": [5, 27, 29, 34, 41, 43, 75, 76, 89, 90, 97, 99, 156, 199, 220, 258, 311, 312], "result": [27, 28, 61, 62, 65, 75, 76, 81, 82, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 185, 194, 195, 198, 208, 221, 275, 311, 312, 320, 323], "empti": [27, 94, 144, 145, 146, 296, 306, 307], "input": [27, 55, 60, 81, 82, 87, 90, 208, 239, 262, 293, 311, 323], "fit": [27, 64], "request": [27, 37, 59, 86, 88, 145, 203, 204, 220, 323], "an": [9, 11, 12, 22, 27, 45, 57, 61, 62, 63, 64, 67, 72, 75, 76, 82, 89, 94, 100, 108, 127, 130, 150, 151, 153, 205, 212, 250, 254, 256, 270, 272, 301, 310, 311, 312, 323], "except": 27, "rais": [27, 310], "1": [27, 61, 62, 64, 67, 72, 75, 107, 108, 150, 151, 215, 216, 217, 220, 293, 310], "equival": [27, 55, 57, 59, 64, 72, 100, 108, 116, 117, 265, 275, 278, 287, 304, 312], "one": [27, 33, 60, 66, 70, 82, 100, 132, 178, 235, 293, 304, 312, 323], "encount": [27, 64, 293], "return": [27, 29, 30, 31, 32, 33, 36, 38, 39, 40, 42, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 69, 70, 72, 75, 76, 77, 81, 82, 97, 99, 101, 103, 104, 105, 108, 112, 113, 114, 125, 131, 150, 153, 166, 182, 195, 196, 197, 200, 201, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 240, 242, 243, 244, 245, 246, 247, 250, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 306, 307, 310, 311, 312, 320, 323], "candid": [27, 312], "must": [27, 33, 101, 137, 147, 178, 180, 203, 204, 215, 216, 217, 311, 312, 323], "list": [27, 33, 35, 45, 49, 54, 55, 57, 58, 61, 62, 64, 72, 76, 81, 82, 89, 90, 100, 101, 102, 103, 105, 108, 112, 121, 122, 124, 126, 127, 129, 135, 137, 142, 143, 144, 145, 146, 147, 150, 151, 155, 168, 169, 170, 171, 178, 183, 184, 185, 194, 195, 196, 197, 199, 203, 204, 205, 206, 207, 212, 214, 234, 235, 239, 249, 262, 265, 266, 267, 269, 273, 274, 275, 277, 278, 279, 287, 288, 290, 292, 293, 294, 298, 300, 302, 304, 305, 306, 307, 308, 310, 312, 323], "id": [27, 49, 54, 101, 103, 104, 105, 233, 312], "int": [8, 9, 12, 14, 27, 33, 39, 45, 49, 54, 55, 58, 59, 61, 62, 63, 64, 66, 67, 70, 112, 117, 121, 122, 123, 130, 131, 140, 141, 143, 150, 155, 165, 181, 186, 188, 189, 193, 203, 204, 215, 216, 217, 220, 223, 224, 227, 228, 234, 245, 247, 262, 265, 275, 287, 291, 293, 295, 296, 297, 299, 302, 311, 312, 320], "str": [27, 31, 33, 36, 38, 47, 48, 49, 51, 60, 61, 62, 63, 64, 66, 68, 70, 72, 75, 77, 79, 108, 119, 133, 137, 147, 150, 151, 152, 154, 156, 168, 173, 182, 183, 187, 194, 199, 200, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 221, 240, 242, 243, 244, 245, 246, 247, 250, 254, 255, 257, 258, 264, 265, 266, 268, 269, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 301, 302, 311, 312, 314, 315, 316, 317, 318, 320], "configuration_nam": [27, 312], "indic": [27, 29, 45, 55, 58, 61, 62, 63, 112, 150, 151, 203, 204, 275, 293, 295, 296, 302], "sequenc": [27, 312], "valu": [27, 55, 57, 60, 61, 62, 63, 64, 66, 67, 72, 75, 99, 108, 112, 113, 114, 168, 177, 220, 235, 245, 247, 265, 287, 291, 293, 295, 296, 297, 318, 323], "per": [27, 75, 112, 113, 114, 193, 271, 310], "unit": [8, 9, 14, 27, 59, 72, 108, 114, 124, 271, 295, 296, 304, 310, 311, 312, 320], "cell": [8, 9, 14, 27, 59, 72, 106, 108, 114, 124, 165, 167, 271, 304, 310, 311, 312, 320], "type": [6, 8, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 32, 36, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 161, 162, 164, 165, 166, 167, 169, 170, 171, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 320, 323], "store": [28, 48, 66, 67, 86, 90, 103, 156, 160, 168, 235, 239, 245, 247, 258, 262, 291, 297, 323], "motif": [29, 311, 312, 323], "configgener": 29, "state": [15, 17, 18, 29, 33, 34, 36, 40, 60, 61, 62, 63, 64, 72, 75, 76, 78, 80, 81, 82, 89, 90, 91, 94, 97, 98, 100, 104, 108, 111, 112, 113, 114, 115, 139, 149, 160, 162, 164, 166, 168, 169, 170, 171, 175, 176, 177, 194, 196, 197, 203, 204, 208, 209, 218, 221, 231, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 256, 268, 289, 291, 293, 296, 297, 301, 310, 311, 312, 323], "alwai": [29, 33, 61, 62, 63], "same": [29, 57, 63, 70, 203, 312], "what": [29, 60, 178, 185, 194, 323], "complet": [29, 33, 34, 35, 37, 39, 41, 43, 75, 135, 168, 169, 170, 171, 178, 180, 185, 194, 201, 202, 220, 221, 323], "run": [29, 33, 34, 35, 37, 39, 41, 43, 48, 60, 67, 75, 82, 87, 90, 150, 160, 168, 169, 170, 171, 178, 180, 181, 185, 194, 220, 221, 239, 254, 310, 322], "ar": [29, 33, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 70, 72, 75, 94, 100, 108, 150, 151, 167, 194, 203, 220, 221, 278, 279, 293, 295, 296, 304, 310, 311, 312, 320, 323], "directli": [29, 87], "other": [29, 75, 263, 293, 323], "ignor": [29, 215, 216, 217], "initi": [17, 18, 29, 33, 34, 64, 66, 76, 94, 100, 122, 125, 160, 164, 168, 170, 176, 295, 296, 311, 312, 320, 323], "copi": [9, 29, 94, 126, 199, 265, 287], "perfect": 29, "can": [3, 29, 33, 36, 46, 47, 55, 61, 62, 63, 64, 88, 105, 150, 151, 254, 293, 310, 311, 312, 320, 323], "made": [29, 220, 312], "oper": [29, 55, 254, 275, 323], "print": [29, 107, 312, 319], "warn": [29, 312], "us": [6, 9, 29, 33, 36, 44, 46, 47, 55, 57, 61, 62, 64, 66, 72, 75, 76, 81, 82, 89, 90, 94, 99, 100, 105, 108, 109, 112, 113, 114, 150, 160, 166, 168, 177, 194, 199, 215, 216, 217, 220, 221, 239, 254, 262, 263, 265, 276, 287, 293, 299, 305, 310, 311, 312, 323], "without": 29, "reorient": 29, "fill": [29, 311, 312, 323], "imperfectli": 29, "given": [21, 29, 49, 54, 59, 61, 62, 63, 64, 72, 108, 129, 130, 146, 178, 278, 293, 312], "default": [29, 61, 62, 63, 66, 75, 99, 166, 168, 203, 220, 231, 234, 295, 296, 311, 312], "static": [11, 30, 31, 36, 38, 97, 163, 172, 208, 279], "fixedconfiggener": [30, 31, 32, 33], "data": [5, 15, 30, 32, 33, 34, 36, 41, 42, 43, 44, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 74, 76, 77, 86, 87, 88, 89, 90, 91, 92, 97, 99, 100, 105, 107, 108, 112, 113, 114, 115, 116, 125, 132, 138, 148, 150, 160, 163, 166, 168, 172, 185, 208, 230, 231, 232, 235, 239, 252, 262, 279, 293, 310, 314, 315, 316, 317, 318, 323], "supercellset": [30, 36, 97, 163], "construct": [11, 30, 33, 36, 40, 55, 59, 61, 62, 63, 64, 72, 75, 77, 82, 88, 89, 90, 97, 100, 163, 172, 208, 279, 293, 295, 296, 310, 311, 312, 323], "from": [2, 5, 11, 30, 36, 41, 55, 77, 82, 87, 97, 100, 112, 132, 163, 172, 205, 206, 208, 213, 254, 270, 275, 279, 293, 311, 323], "config_gener": [30, 33], "convert": [32, 42, 55, 166, 174, 271], "output_param": [33, 34, 41, 43], "rundataoutputparam": [33, 169, 170, 171, 172, 173, 174, 175, 176, 177], "initial_condit": 33, "conditions_incr": 33, "n_state": 33, "ani": [33, 52, 178, 180, 314, 316, 318, 323], "dependent_run": 33, "modifi": [33, 36, 78, 199, 254, 256, 310, 311], "tupl": [33, 61, 62, 245, 247, 265, 275, 287, 291, 297], "callabl": [33, 36, 61, 62, 63, 64, 150, 215, 216, 217, 254], "montecarlost": [33, 36, 40, 81, 82, 90, 95, 96, 97, 98, 99, 100, 111, 160, 162, 164, 239, 251, 254, 256, 268, 289, 291, 293, 296, 297, 301, 310, 311, 312, 322], "stategener": 33, "seri": [33, 40, 160, 168, 323], "linear": [8, 9, 14, 33, 66, 112, 123, 215, 216, 217, 220, 293, 304, 323], "path": [33, 75, 194, 221, 279, 323], "space": [33, 64, 66, 215, 216, 217, 220, 323], "control": [33, 168, 323], "save": [33, 72, 108, 168, 169, 170, 171, 173, 175, 176, 177, 323], "write": [33, 43, 75, 99, 166, 168, 175, 176, 177, 194, 221, 323], "At": [33, 323], "least": 33, "final": [18, 33, 34, 121, 125, 160, 162, 168, 169, 171, 175, 323], "enabl": [33, 160, 168, 171, 323], "restart": [33, 160, 168, 171], "depend": [33, 34, 60, 72, 94, 160, 168, 186, 323], "chang": [19, 33, 72, 108, 112], "each": [33, 45, 49, 54, 55, 56, 59, 60, 61, 62, 66, 67, 68, 70, 75, 85, 88, 106, 125, 150, 151, 160, 194, 221, 293, 304, 323], "subsequ": [33, 220, 323], "number": [33, 39, 59, 61, 62, 64, 66, 67, 72, 82, 89, 100, 108, 109, 125, 140, 141, 143, 178, 179, 185, 193, 223, 224, 227, 228, 271, 293, 310, 323], "rundata": [33, 34, 35, 161, 162, 163, 164, 165, 166, 167], "functor": 33, "next": [33, 40, 72, 104, 105, 108, 160, 168, 323], "previous": 33, "usual": [33, 193], "instanc": [33, 106, 262, 323], "previou": [33, 168, 171, 311, 312], "otherwis": [21, 33, 64, 93, 178, 180, 194, 221, 235], "befor": [33, 36, 46, 47, 61, 62, 63, 64, 76, 89], "custom": [33, 36, 64, 66, 68, 88, 215, 216, 217, 263, 293, 323], "constraint": [33, 36], "attribut": [5, 9, 15, 33, 44, 55, 60, 72, 94, 100, 108, 111, 116, 132, 150, 160, 168, 178, 185, 194, 231, 239, 254, 262, 293], "incrementalconditionsstategener": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 160, 168, 323], "run_data": 34, "mai": [3, 9, 34, 72, 75, 87, 94, 108, 144, 145, 146, 220, 235, 249, 263, 306, 307, 312, 323], "eras": 34, "set": [3, 34, 45, 48, 50, 51, 53, 55, 56, 57, 66, 68, 75, 76, 85, 86, 87, 89, 90, 100, 199, 203, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 240, 242, 243, 244, 245, 246, 247, 250, 262, 264, 265, 266, 268, 275, 278, 280, 282, 286, 287, 288, 289, 291, 293, 297, 301, 323], "properti": [6, 8, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 35, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 65, 71, 73, 74, 78, 79, 80, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 102, 106, 115, 117, 118, 119, 120, 123, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 202, 209, 210, 211, 218, 219, 232, 233, 234, 235, 236, 237, 238, 241, 245, 247, 248, 249, 251, 252, 253, 255, 256, 257, 262, 263, 266, 269, 270, 271, 273, 274, 276, 277, 288, 290, 291, 292, 293, 294, 297, 298, 299, 303, 305, 308, 309, 323], "modifying_funct": [36, 254], "name": [31, 36, 38, 45, 60, 61, 62, 63, 64, 66, 68, 70, 119, 125, 137, 147, 150, 151, 156, 200, 203, 204, 205, 206, 207, 210, 212, 213, 214, 240, 242, 243, 244, 245, 246, 247, 250, 254, 258, 264, 265, 268, 272, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 297, 301, 302, 311], "state_gener": 36, "have": [37, 63, 67, 70, 215, 216, 217, 220, 235, 293, 296, 311, 312, 320], "been": [37, 61, 62, 63, 64], "read": [41, 87], "output_dir": [41, 43, 75, 168, 194, 221], "completed_run": [41, 43, 168, 173, 175, 176], "json": [7, 11, 13, 25, 41, 43, 60, 73, 75, 77, 94, 97, 99, 108, 125, 137, 138, 139, 168, 173, 175, 176, 194, 196, 206, 208, 209, 214, 221, 230, 279, 293], "skip": 41, "exist": [41, 55, 67, 75, 87, 280, 281, 282, 283, 284, 285], "self": [7, 9, 10, 13, 25, 44, 55, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 75, 76, 77, 81, 82, 89, 90, 94, 99, 100, 101, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 150, 156, 157, 158, 159, 178, 182, 185, 194, 195, 196, 197, 200, 201, 203, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 240, 242, 243, 244, 245, 246, 247, 250, 254, 258, 259, 260, 261, 262, 264, 265, 267, 268, 272, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 295, 296, 297, 300, 301, 302, 304, 306, 307], "system": [54, 55, 60, 239, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 322], "param": [60, 87], "pybind11_object": [5, 9, 15, 44, 55, 60, 94, 100, 107, 109, 111, 116, 126, 132, 150, 156, 178, 185, 194, 231, 239, 254, 258, 262], "semigrand_canon": 60, "ensembl": 60, "lte": [], "low": [], "temperatur": [60, 323], "flex": [], "allow": [21, 66, 67, 69, 70, 72, 88, 93, 108, 109, 125, 195, 196, 197, 200, 201, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 254, 256, 267, 307, 308, 309, 310], "rang": [64, 189, 293], "varianc": [], "correl": [19, 23, 67, 69, 75, 242, 244, 323], "match": [182, 203, 204, 311, 323], "model": [60, 72, 94, 108, 239, 262], "requir": [3, 60, 61, 62, 63, 64, 90, 239], "link": [3, 60], "under": [60, 312], "expect": [60, 99], "document": [3, 94, 99], "exampl": [61, 62, 72, 108, 293, 323], "enumer": [], "dure": [81, 82, 90, 185, 239, 293, 310, 312, 323], "analysi": [65, 75, 134, 154, 194, 195, 198, 199, 205, 208, 212, 257, 323], "resultsanalysisfunctionmap": [65, 134, 157, 158, 159, 194, 198, 208], "sampl": [45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 67, 73, 75, 77, 81, 82, 84, 93, 132, 137, 138, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 178, 180, 182, 185, 190, 191, 192, 194, 196, 197, 203, 204, 206, 208, 209, 210, 215, 216, 217, 218, 219, 220, 221, 224, 228, 263, 293, 323], "jsonstatesamplingfunctionmap": [73, 139, 194, 208, 209], "label": [47, 48, 49, 51, 61, 62, 75, 77, 182, 183, 194, 208, 221], "write_result": [75, 194, 221], "write_trajectori": [75, 194, 221], "write_observ": [75, 194, 221], "write_statu": [75, 194, 221], "log_fil": [75, 194, 221], "log_frequency_in_": [75, 194, 221], "600": [75, 194, 221], "0": [22, 48, 55, 57, 61, 62, 63, 64, 67, 72, 75, 107, 108, 150, 151, 189, 194, 215, 216, 217, 220, 221, 293, 295, 296], "samplingfixtureparam": [75, 77, 82, 132, 178, 185, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 322], "fixtur": [47, 48, 49, 50, 51, 75, 77, 132, 178, 180, 182, 185, 190, 191, 194, 210, 323], "By": [75, 203], "occur": [19, 52, 61, 62, 63, 64, 72, 75, 101, 104, 108, 142, 143, 144, 145, 220, 237, 323], "linearli": 75, "pass": [52, 75, 143, 186, 188, 193, 215, 217, 223, 227, 323], "period": [67, 75, 215, 216, 217, 220, 323], "clex": 75, "formation_energi": 75, "format": [19, 72, 75, 97, 99, 108, 279, 293], "energi": [16, 17, 18, 19, 72, 75, 107, 108, 323], "unitcel": 75, "mol_composit": [60, 75, 311], "mol": [75, 310], "vec": [75, 310], "param_composit": [60, 75, 311], "parametr": [75, 262, 271], "math": [75, 215, 216, 217], "x": [75, 127, 130, 199], "potential_energi": 75, "order_paramet": 75, "kei": [9, 48, 66, 70, 75, 94, 137, 147, 240, 242, 243, 244, 245, 246, 247, 250, 264, 265, 266, 268, 269, 272, 273, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 301, 302], "dof_spac": 75, "subspace_magnitud": 75, "magnitud": 75, "subspac": [75, 274, 302], "dof_subspac": 75, "evalu": [3, 63, 66, 68, 75, 90, 134, 153, 194, 199, 239, 323], "heat_capac": 75, "mol_susc": 75, "exclud": 75, "param_susc": 75, "mol_thermochem_susc": 75, "param_thermochem_susc": 75, "converg": [75, 81, 82, 194, 204, 220, 221, 323], "absolut": [75, 203, 323], "precis": [75, 194, 203, 204, 220, 221, 323], "001": 75, "everi": [67, 75, 220], "100": [67, 75, 220], "start": [64, 75, 323], "th": [52, 55, 57, 75, 215, 216, 217, 220, 265, 278, 287, 293, 302], "No": [5, 75], "cutoff": [75, 180, 201, 222, 223, 224, 225, 226, 227, 228, 229], "standard": [62, 75, 88, 99, 166, 168, 293, 323], "corr": 75, "basi": [75, 99, 166, 168, 177, 242, 244, 262, 264, 265, 266, 275, 278, 280, 282, 286, 287, 288, 293, 295, 296, 302, 323], "sparse_corr": 75, "non": 75, "zero": 75, "coeffici": [75, 245, 247, 262, 291, 297, 299], "multiclex": 75, "samplingfixtur": [50, 75, 77, 82, 178, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 208, 323], "summari": [72, 75, 107, 108, 160, 168, 319, 323], "upon": [75, 194, 221], "alreadi": [75, 107], "new": [75, 89, 112], "append": [75, 129, 199, 200, 207, 323], "trajectori": [75, 120, 125, 194, 221, 323], "when": [6, 45, 48, 52, 61, 67, 75, 87, 142, 144, 145, 178, 185, 194, 215, 216, 217, 220, 221, 237, 238, 293, 323], "taken": [46, 47, 48, 75, 194, 215, 216, 217, 220, 221, 323], "output": [61, 62, 67, 75, 125, 194, 210, 211, 221, 323], "larg": 75, "individu": [67, 72, 75, 108, 194, 221, 312], "observ": [75, 194, 221, 323], "directori": [75, 194, 221], "log": [64, 66, 75, 194, 215, 216, 217, 220, 221, 323], "statu": [75, 194, 211, 221, 323], "where": [52, 55, 57, 72, 75, 108, 167, 194, 221, 265, 287, 293, 295, 296, 320, 323], "should": [61, 62, 63, 66, 70, 75, 194, 199, 215, 216, 217, 221, 323], "written": [75, 194, 221], "time": [48, 50, 51, 53, 67, 72, 75, 93, 108, 144, 194, 208, 217, 221, 225, 229, 237, 323], "between": [75, 194, 221, 245, 247, 271, 291, 297], "second": [75, 194, 221, 311, 312], "after": [61, 62, 63, 75, 76, 85, 88, 194, 220, 221, 235, 275], "so": [61, 62, 63, 64, 75, 194, 221], "sampling_param": [75, 194, 206, 214, 221], "longer": [75, 194, 220, 221], "than": [72, 75, 108, 194, 220, 221, 311, 320], "log_frequency_is_": [75, 194, 221], "less": [75, 194, 221], "frequent": [75, 194, 220, 221], "sampling_fixture_param": [75, 77, 82, 132, 178, 185, 208], "statemodifyingfunctionmap": [78, 259, 260, 261], "montepotenti": [80, 112, 113, 114, 115, 323], "run_manag": [50, 81], "runmanag": [81, 83, 179, 180, 181, 182, 183, 184, 322], "occ_loc": [76, 81, 82, 90, 100, 239, 254, 256, 310], "occloc": [76, 81, 82, 90, 100, 239, 249, 254, 256, 310], "singl": [5, 15, 59, 81, 82, 293, 307, 323], "evolv": [81, 82], "specifi": [9, 12, 55, 64, 72, 81, 82, 101, 103, 108, 178, 185, 194, 203, 204, 245, 247, 265, 278, 279, 287, 291, 293, 295, 296, 297, 311, 312, 320, 323], "criteria": [81, 82, 204, 312], "collect": [61, 62, 63, 64, 67, 68, 69, 81, 82, 85, 87, 88, 132, 178, 185, 293, 323], "occup": [6, 76, 81, 82, 89, 90, 100, 105, 112, 121, 122, 125, 239, 249, 254, 256, 270, 295, 296, 308, 310], "locat": [76, 81, 82, 89, 90, 100, 105, 168, 173, 239, 249, 254, 256, 310], "user": [81, 82, 90, 100, 239, 310, 323], "respons": [81, 82, 90, 100, 239, 310], "ensur": [81, 82, 90, 100, 239, 310], "up": [81, 82, 90, 100, 239, 310, 323], "date": [81, 82, 90, 100, 239, 310], "updat": [46, 47, 66, 67, 68, 69, 70, 72, 76, 81, 82, 90, 101, 108, 239, 254, 256, 310], "engin": [82, 89, 100, 178, 185, 310], "randomnumberengin": [82, 89, 100, 178, 179, 185, 310], "random": [82, 89, 100, 178, 179, 185, 310], "seed": [82, 89, 100], "std": [82, 89, 100], "random_devic": [82, 89, 100], "It": 82, "sampling_fixtur": 82, "statesamplingfunctionmap": [84, 149, 194, 208, 218], "onc": 90, "call": [55, 66, 67, 69, 70, 76, 88, 89, 90, 104, 105, 194, 195, 196, 197, 200, 201, 203, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 254], "outsid": 90, "statedata": [91, 115, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 323], "simul": [48, 52, 94, 220, 225, 229, 293, 322], "hold": [45, 94, 97, 231, 323], "special": [9, 55, 94, 107, 109, 254], "deepcopi": [9, 94], "microst": 94, "accept": [94, 140], "make_conditions_from_value_map": 94, "descript": [61, 62, 63, 64, 97, 99, 150, 151, 236, 254], "share": [89, 97], "avoid": 97, "duplic": [55, 97], "write_prim_basi": [99, 166, 168], "repres": [7, 10, 13, 25, 61, 62, 67, 99, 125, 150, 151, 230], "dof": [55, 72, 99, 108, 166, 168, 177, 265, 287, 295, 296, 309], "implement": [87, 111, 323], "linear_site_index": 112, "new_occ": 112, "site": [55, 56, 57, 72, 108, 112, 121, 122, 125, 193, 293, 306, 307], "being": [115, 183, 184, 245, 247, 291, 293, 297], "structur": [105, 132, 160, 185, 231, 295, 296, 309, 323], "completioncheckparam": [135, 194, 202, 323], "elaps": [136, 142, 222, 226], "clocktim": [136, 142, 222, 226], "json_sampling_funct": [137, 194, 208], "jsonsamplermap": 138, "total": [53, 72, 108, 140, 141, 238, 270], "reject": 141, "count": [52, 61, 62, 64, 143, 188, 189, 293, 323], "could": [143, 323], "step": [52, 67, 143, 186, 189, 193, 216, 223, 227, 311, 312, 323], "whensampl": 143, "applic": [66, 85, 86, 87, 88, 144, 225, 229], "weight": [61, 62, 64, 146], "normal": [22, 146], "sampling_funct": [147, 194, 208], "samplermap": 148, "shape": [46, 47, 61, 62, 150, 167, 295, 296, 320, 323], "numpi": [19, 23, 59, 61, 62, 150, 295, 296, 310], "float64": [61, 150, 310], "m": [59, 61, 62, 150, 151, 155, 310, 320], "component_nam": [61, 62, 150, 203, 204], "end": [127, 150], "quantiti": [61, 62, 63, 64, 150, 151, 155, 196, 197, 203, 204, 206, 214, 220, 323], "column": [45, 46, 47, 59, 61, 62, 72, 108, 150, 151, 155, 167, 293, 295, 296, 320], "major": [61, 62, 150, 151, 155], "unrol": [61, 62, 150, 151, 155], "scalar": [61, 62, 64, 150, 155], "vector": [61, 62, 150, 151, 155, 167, 295, 296, 302, 311, 312, 320], "matrix": [59, 61, 62, 150, 151, 155, 167, 248, 253, 293, 295, 296, 320], "etc": [61, 62, 150, 151, 155, 220, 323], "arrai": [61, 62, 150, 153, 270, 302], "proper": [150, 153], "size": [72, 108, 150, 153, 168, 171], "string": [61, 62, 150, 151, 312], "e": [55, 57, 61, 62, 150, 151, 287, 323], "2": [61, 62, 150, 151, 220, 293], "mg": [61, 62, 150, 151], "va": [61, 62, 150, 151], "o": [61, 62, 150, 151], "resultsanalysisfunct": [151, 152, 153, 154, 155, 156, 195, 323], "typic": [61, 62, 63, 64, 151, 254], "like": [126, 156, 258, 323], "_clexmonte_run_manag": [], "itemsview": [157, 259], "_clexmonte_st": [], "keysview": [158, 260], "valuesview": [159, 261], "initial_st": [160, 166, 311, 312], "final_st": [160, 166], "determin": [8, 9, 14, 52, 61, 62, 63, 64, 160, 168, 220, 311, 312, 323], "its": [67, 160, 168, 231, 293, 323], "case": [160, 168, 323], "volum": [165, 311, 312, 320, 323], "integ": [62, 165, 270, 311, 312, 320], "multipl": [64, 66, 67, 69, 70, 165, 195, 196, 197, 200, 201, 203, 204, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 311, 312, 320, 323], "primit": [55, 106, 165, 167, 309, 311, 312], "write_initial_st": [166, 168, 174], "write_final_st": [166, 168, 171, 174], "degre": [166, 168, 177, 309], "freedom": [166, 168, 177, 309], "transform": [167, 248, 253, 295, 296, 300, 310, 320], "t": [167, 295, 296, 320], "relat": [167, 295, 296, 320], "lattic": [167, 295, 296, 311, 312, 320], "": [66, 72, 76, 90, 100, 105, 107, 167, 168, 169, 170, 171, 248, 249, 253, 254, 256, 295, 296, 311, 312, 320], "l": [49, 54, 129, 167, 295, 296, 320], "accord": [167, 295, 296, 311, 312, 320, 323], "3": [46, 47, 167, 262, 293, 295, 296, 320], "matric": [45, 67, 167, 295, 296, 320], "int64": [62, 167, 248, 253, 295, 296], "do_save_all_initial_st": 168, "do_save_all_final_st": 168, "do_save_last_final_st": 168, "affect": [], "last": [47, 48, 49, 61, 62, 63, 64, 85, 131, 168, 171, 231], "global_cutoff": [178, 323], "how": [178, 185, 194, 215, 216, 217, 323], "global": [180, 295, 296], "index": [8, 9, 12, 14, 45, 55, 57, 59, 64, 72, 108, 117, 123, 131, 181, 234, 241, 245, 247, 276, 291, 293, 297, 312], "get": [109, 182, 199, 240, 242, 243, 244, 245, 246, 247, 250, 254, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 278, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 300, 301, 302, 304, 306, 307, 310], "manag": [183, 184], "analysis_funct": [194, 208, 212], "samplingparam": [194, 215, 216, 217, 219, 323], "completion_check_param": 194, "analysis_nam": [194, 200, 205, 207, 213], "mean": [72, 108, 194, 221, 278, 323], "estim": [194, 221, 323], "ab": 203, "rel": [17, 18, 124, 203, 279, 323], "component_index": [203, 204], "level": [203, 204, 323], "equilibr": [203, 204], "To": [66, 67, 69, 70, 195, 196, 197, 200, 201, 203, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "chain": [66, 67, 69, 70, 195, 196, 197, 200, 201, 203, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "requestedprecisionconstructor": [], "time_sampling_allow": 208, "valid": [104, 105, 208], "whether": [56, 208, 323], "intend": 208, "distinguish": 210, "handl": [211, 262], "methodlog": 211, "specif": [103, 220, 239, 323], "clusterexpans": [240, 268, 323], "localclusterexpans": [243, 289], "local": [23, 55, 59, 72, 108, 243, 244, 245, 246, 275, 278, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 323], "localcorrel": 244, "multilocalclusterexpans": [245, 291], "multiclusterexpans": [245, 247, 291, 297], "orderparamet": [250, 273, 274, 301, 323], "involv": [254, 265, 287], "funcnam": 254, "enforc": [254, 310, 311], "enforce_composition_f": 254, "signatur": [215, 216, 217, 254, 256], "def": [215, 216, 217, 254, 256], "func": [254, 256], "event": [5, 9, 12, 15, 19, 21, 22, 23, 24, 52, 53, 61, 62, 63, 64, 66, 68, 70, 71, 72, 85, 86, 87, 88, 89, 100, 101, 103, 104, 105, 106, 107, 108, 109, 116, 117, 119, 123, 124, 125, 157, 158, 159, 231, 232, 233, 234, 235, 236, 237, 238, 254, 256, 259, 260, 261, 267, 276, 277, 293, 304, 306, 307, 310, 319, 323], "bodi": [254, 256], "support": [254, 256], "tracker": [254, 256], "statemodifyingfunct": [255, 256, 257, 258], "xtal_prim": 262, "composition_convert": 262, "compositionconvert": [262, 271, 323], "n_dimens": 262, "ax": [262, 320, 323], "definit": [118, 262], "neighbor": [55, 262, 305], "dimension": [262, 299], "clexul": [3, 245, 247, 264, 280, 291, 297, 323], "localclexul": [264, 286], "occswap": [267, 306, 307, 310], "swap": [267, 306, 307, 310], "_clexmonte_system": [], "config": [], "sublattic": 270, "compositioncalcul": [55, 270, 310], "speci": [271, 308], "dofspac": [272, 273, 274, 302], "defin": [274, 323], "search_path": 279, "local_clexul": 286, "array_lik": [295, 296, 320], "dtype": [295, 296, 320], "superstructur": [295, 296], "default_configur": 295, "express": [295, 296], "default_st": 296, "form": [302, 312], "symmetri": [125, 303], "primneighborlist": [55, 305], "multioccswap": 306, "propos": [307, 310], "crystal": [309, 323], "target_mol_composit": 310, "composition_calcul": [55, 310], "semigrand_canonical_swap": 310, "target": 310, "most": [55, 310, 323], "close": [310, 311], "improv": 310, "consist": [278, 310], "found": [310, 312], "repeat": 310, "unless": 310, "thei": [63, 70, 293, 304, 310, 311], "explicitli": [310, 323], "neither": [310, 311], "nor": [310, 311], "dir": [311, 312, 320], "abc": [311, 312, 320], "min_volum": [311, 312, 320], "1000": [220, 311, 312, 320], "appropri": [311, 312], "work": [311, 312], "follow": [293, 311, 312, 323], "With": 311, "make_initial_st": [311, 323], "optim": 311, "satisfi": 311, "take": [57, 311], "exactli": 311, "direct": [64, 311, 312, 320], "along": [66, 70, 311, 312, 320, 323], "expand": [311, 312, 320], "b": [311, 312, 320], "c": [311, 312, 320], "third": [311, 312, 320], "forc": [311, 312], "transformation_matrix_to_supercel": [311, 312], "rather": 311, "is_canonical_st": [], "restrict": 312, "over": [72, 108, 109, 312], "els": [100, 120, 220, 312], "chosen": [72, 108, 311, 312], "consider": 312, "meet": 312, "remov": [55, 68, 131, 204, 205, 206, 213, 222, 223, 224, 225, 226, 227, 228, 229, 312], "still": [293, 312], "scale": [64, 312, 320], "scale_supercel": 312, "subject": 312, "creat": [61, 62, 64, 312], "were": 312, "wa": [48, 62, 238, 312], "pars": [314, 315, 316, 317, 318], "required_typ": [314, 316], "default_valu": 314, "kwarg": [126, 129, 131, 314, 316, 318], "write_nul": 318, "superlattic": 320, "seoncd": 320, "t_final": 320, "diagon": 320, "greater": 320, "approach": 322, "basic": 323, "setup": 323, "section": 323, "independ": [55, 323], "particular": [5, 64, 85, 86, 87, 88, 104, 278, 323], "sytem": 323, "also": [72, 108, 125, 323], "statesamplingfunct": [197, 323], "jsonstatesamplingfunct": [196, 323], "run_fixtur": 323, "combin": [56, 57, 293, 323], "give": [72, 108, 293, 323], "exact": 323, "make_canonical_initial_st": 323, "certain": 323, "enforce_composit": 323, "perturb": 323, "desir": [220, 323], "both": [72, 323], "often": 323, "maximum": [61, 62, 64, 66, 67, 220, 222, 223, 224, 225, 293, 323], "comput": 323, "recent": 323, "In": 323, "some": [9, 323], "re": 323, "differ": 323, "interv": [220, 323], "do": [199, 323], "finish": 323, "stop": [67, 323], "addition": 323, "vari": 323, "main": 323, "averag": [72, 108, 323], "heat": 323, "capac": 323, "suscept": 323, "fluctuat": 323, "addit": [61, 62, 64, 88, 263, 293, 323], "eas": 323, "integr": 323, "free": 323, "organ": 323, "increas": 323, "constant": 323, "chemic": 323, "variou": 323, "autom": 323, "run_seri": [], "flow": 323, "help": 323, "process": [72, 108, 323], "submit": 323, "job": 323, "analyz": 323, "plot": 323, "delet": [168, 171], "reduc": [168, 171], "memori": [72, 108, 168, 171], "_monte_ev": [157, 158, 159, 259, 260, 261], "param_chem_pot": 60, "either": [199, 311], "modif": 311, "Then": 312, "pypi": 2, "environ": 2, "contributor": 2, "built": 3, "maco": 3, "x86_64": 3, "intel": 3, "arm64": 3, "appl": 3, "silicon": 3, "linux": 3, "aarch64": 3, "latest": 3, "releas": 3, "pip": 3, "compil": 3, "bset": 3, "variabl": 3, "contribut": 3, "guid": 3, "translation": [5, 106, 116], "distinct": [5, 106, 304], "obtain": [5, 55, 293], "monteeventdata": [5, 9, 12, 71, 101, 102, 103, 104, 105, 106, 107], "event_data": [5, 100], "eventdata": [6, 7, 8, 232], "track": [6, 293], "select": [6, 61, 62, 63, 64, 66, 68, 70, 85, 86, 87, 88, 89, 231, 232, 233, 234, 235, 236, 238, 293, 319, 323], "occev": [6, 105, 118, 278, 300], "unitcellindexconvert": [8, 9, 14], "prim_event_index": [9, 64], "unitcell_index": [9, 59], "via": 9, "sort": [9, 55], "compar": [9, 66], "hashabl": 9, "prim_event_list": [9, 12], "eventid": [10, 11, 12, 13, 14, 101, 102, 103, 104, 105, 109, 233], "arg0": [11, 68, 105, 126], "eventst": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 104, 235], "kra": [16, 72, 108], "activ": [17, 323], "corr_siz": [19, 23], "attempt": [20, 72, 108], "frequenc": [20, 72, 107, 108], "de_activ": 22, "de_fin": 22, "neighborhood": 23, "fix": 31, "increment": [38, 72, 108, 237], "kineticsdata": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 74], "atom": [45, 46, 47, 49, 54, 67, 125], "posit": [45, 46, 47, 49, 54, 61, 67, 130], "occsystem": [45, 125, 276], "atom_name_list": 45, "cartesian": [46, 47, 67], "coordin": [46, 47, 64, 67], "contain": [46, 47, 61, 62, 235], "n_atom": [46, 47], "prev_atom_positions_cart": [46, 49], "displac": [46, 47], "begin": [48, 55, 64, 66, 87, 215, 216, 217, 220, 293], "uniqu": [49, 54, 57, 293], "due": [52, 72, 108], "rate": [53, 72, 89, 103, 107, 108, 235, 238], "atom_positions_cart": 54, "local_orbit": [55, 287, 293], "orbits_to_calcul": [55, 56, 57, 59, 293], "combine_orbit": [55, 57, 59, 293], "prim_nlist": 55, "supercell_nlist": 55, "superneighborlist": 55, "supercell_index_convert": 55, "siteindexconvert": 55, "dof_valu": 55, "configdofvalu": 55, "orbit": [55, 56, 57, 58, 59, 246, 265, 287, 293, 294], "conveni": [55, 61, 62, 63, 64], "them": 55, "local_orbit_composition_calcul": 55, "j": [55, 57, 265, 287], "around": [55, 287, 323], "phenomen": [55, 57, 59, 275, 278, 287], "local_basis_set_cluster_info": [55, 293], "separ": [55, 56, 106, 293, 304], "xtal": 55, "unitcellcoordindexconvert": 55, "localorbitcompositioncalcul": [56, 57, 58, 59, 246, 293], "integralsitecoordin": [57, 124], "equivalent_index": [59, 278], "int32": 59, "associ": [59, 106, 293, 304], "about": [59, 63, 85, 323], "metropoli": 60, "algorithm": 60, "requires_event_st": [61, 62, 63, 64, 235], "has_value_funct": [61, 62, 63], "max_siz": [61, 62, 64, 66, 293], "10000": [61, 62, 64, 220, 293], "value_label": [61, 62], "add": [61, 62, 63, 64, 66, 70, 127, 195, 196, 197, 212, 214], "discret": [61, 66], "vectorfloathistogramfunct": 61, "selected_event_funct": [61, 62, 63, 64, 66, 70], "discrete_vector_float_funct": 61, "argument": [61, 62, 63, 64], "lambda": [61, 62, 63, 64], "ha": [61, 62, 63, 64, 72, 108], "pointer": [61, 62, 63, 64, 76], "bin": [61, 62, 64, 66, 72, 107, 293], "ad": [61, 62, 64, 66, 70, 88, 195, 196, 197, 214, 293], "point": [61, 62, 64, 66, 90, 100, 293], "would": [61, 62, 64], "caus": [61, 62, 64], "exce": [61, 62, 64], "instead": [61, 62, 64, 199], "out_of_range_count": [61, 62, 64], "discretevectorinthistogram": [61, 62], "comparison": 61, "histogram": [61, 64, 72, 107, 293, 323], "neg": 61, "vectorinthistogramfunct": 62, "discrete_vector_int_funct": 62, "selected_ev": 62, "by_typ": [62, 64], "a_va_1nn": [62, 72, 108, 293], "b_va_1nn": 62, "genericselectedeventfunct": 63, "generic_funct": 63, "lower": [63, 70], "two": [63, 70], "lexicograph": [63, 70], "partition_typ": 64, "is_log": 64, "initial_begin": [64, 66], "bin_width": [64, 66], "continu": [64, 66], "1d": 64, "partit": 64, "ii": [64, 199], "iii": 64, "hop": [64, 67, 69], "lookup": 64, "tabl": [64, 72, 108, 276], "partition_index": 64, "partitionedhistogramfunct": 64, "continuous_1d_funct": 64, "by_equivalent_index": 64, "by_equivalent_index_and_direct": 64, "adjust": 64, "necessari": [64, 67, 76, 89, 220], "width": [64, 66, 72, 107], "partitionedhistogram1d": 64, "selected_event_function_param": [66, 67, 68, 69, 70, 86, 88], "function_nam": [66, 70], "These": [66, 70], "dictionari": [66, 70], "selectedeventfunctionparam": [66, 67, 69, 70, 87, 322], "jumps_per_position_sampl": 67, "max_n_position_sampl": 67, "output_incomplete_sampl": 67, "stop_run_when_complet": 67, "boundari": 67, "did": 67, "jump": 67, "enough": 67, "energy_bin_width": [72, 107], "freq_bin_width": [72, 107], "rate_bin_width": [72, 107], "monteeventdatasummari": [72, 108], "ev": [72, 107], "log10": [72, 107], "n_unitcel": [72, 108], "n_event": [72, 108], "n_events_with_no_barri": [72, 108], "barrier": [72, 108], "event_list_s": [72, 108], "larger": [72, 108], "slot": [72, 108], "sum": [72, 108], "mean_time_incr": [72, 108], "until": [72, 104, 105, 108], "total_r": [72, 108], "memory_us": [72, 108], "memory_used_mib": [72, 108], "mib": [72, 108], "impact_neighborhood": [72, 108], "trigger": [72, 108], "three": [72, 108], "20": [72, 108], "impact_t": [72, 108], "impact": [72, 108], "row": [72, 108], "equiv": [72, 108], "make": [76, 85, 89], "set_state_and_potenti": [76, 89, 100], "selectedev": [85, 232, 233, 234, 235, 236, 237, 238, 323], "selectedeventdata": 86, "accordingli": 87, "selectedeventfunct": [88, 323], "make_occ_loc": [89, 100], "timestep": 89, "set_event_data": 100, "own": 100, "impacted_ev": 101, "monteeventlist": [102, 110], "forward": [106, 120, 304], "revers": [106, 120, 304], "primeventlist": [106, 127, 128, 129, 130, 131], "summar": [107, 319], "event_data_summari": 107, "pretti": 107, "len": 109, "event_list": 109, "event_id": 109, "common": 116, "primeventdata": [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 236, 304], "event_system": 125, "include_clust": 125, "include_cluster_occup": 125, "include_event_invari": 125, "invari": 125, "distanc": 125, "arg": [126, 129, 131], "overload": [126, 129, 131], "__init__": 126, "_clexmonte_monte_calcul": [126, 129, 131], "item": [127, 129, 130, 131], "content": 128, "sample_mod": 186, "steps_per_pass": 189, "mode": [192, 215, 216, 217], "mutat": 193, "f": [195, 196, 197], "automat": [195, 196, 197], "entir": 199, "y": 199, "z": 199, "append_to_analysis_nam": 199, "remove_from_analysis_nam": 199, "extend_analysis_nam": 199, "clear": 201, "analys": [205, 212], "sampler_nam": [206, 214], "json_sampler_nam": [206, 214], "2589254117941673": [215, 216, 217], "shift": [215, 216, 217, 220], "custom_sample_at": [215, 216, 217], "detail": [215, 216, 217], "One": [215, 216, 217], "pow": [215, 216, 217], "10": [215, 216, 217, 220], "log_spac": 220, "check_begin": 220, "check_period": 220, "check_bas": 220, "check_shift": 220, "check_period_max": 220, "done": 220, "too": 220, "slow": 220, "down": 220, "infrequ": 220, "logarithm": 220, "round": 220, "howev": 220, "200": 220, "300": 220, "20000": 220, "30000": 220, "effect": 220, "earliest": 220, "expon": 220, "io": 221, "max_clocktim": 222, "max_count": 223, "max_sampl": 224, "max_tim": 225, "min_clocktim": 226, "min_count": 227, "min_sampl": 228, "min_tim": 229, "event_data_typ": 234, "low_memori": 234, "convers": [241, 276], "glossari": [245, 247, 291, 297], "map": [245, 247, 291, 297], "purpos": 263, "info": [265, 287], "clusterographi": [265, 287], "function_to_orbit_index": [265, 287], "phenomenal_clust": 275, "equivalent_generating_op_indic": 275, "prototyp": 275, "translat": 275, "kmc": [276, 293], "event_type_nam": 278, "events_local_multiclex_nam": 278, "integralclust": 287, "parameter": 293, "event_nam": 293, "local_orbit_composit": 293, "occurr": 293, "out": 293, "local_basis_set": 293, "equivalents_info": 293, "occeventrep": 300, "represent": 300, "entri": 304, "symmetr": 304, "mani": 323, "high": 323, "tutori": 323}, "objects": {"libcasm": [[4, 0, 0, "-", "clexmonte"]], "libcasm.clexmonte": [[5, 1, 1, "", "EventData"], [9, 1, 1, "", "EventID"], [15, 1, 1, "", "EventState"], [26, 1, 1, "", "FindMinPotentialConfigs"], [29, 1, 1, "", "FixedConfigGenerator"], [33, 1, 1, "", "IncrementalConditionsStateGenerator"], [44, 1, 1, "", "KineticsData"], [55, 1, 1, "", "LocalOrbitCompositionCalculator"], [60, 1, 1, "", "MonteCalculator"], [94, 1, 1, "", "MonteCarloState"], [100, 1, 1, "", "MonteEventData"], [107, 1, 1, "", "MonteEventDataSummary"], [109, 1, 1, "", "MonteEventList"], [111, 1, 1, "", "MontePotential"], [116, 1, 1, "", "PrimEventData"], [126, 1, 1, "", "PrimEventList"], [132, 1, 1, "", "Results"], [150, 1, 1, "", "ResultsAnalysisFunction"], [156, 1, 1, "", "ResultsAnalysisFunctionMap"], [160, 1, 1, "", "RunData"], [168, 1, 1, "", "RunDataOutputParams"], [178, 1, 1, "", "RunManager"], [185, 1, 1, "", "SamplingFixture"], [194, 1, 1, "", "SamplingFixtureParams"], [231, 1, 1, "", "SelectedEvent"], [239, 1, 1, "", "StateData"], [254, 1, 1, "", "StateModifyingFunction"], [258, 1, 1, "", "StateModifyingFunctionMap"], [262, 1, 1, "", "System"], [310, 5, 1, "", "enforce_composition"], [311, 5, 1, "", "make_canonical_initial_state"], [312, 5, 1, "", "make_initial_state"], [313, 0, 0, "-", "parsing"], [319, 5, 1, "", "print_selected_event_functions"], [320, 5, 1, "", "scale_supercell"]], "libcasm.clexmonte.EventData": [[6, 2, 1, "", "event"], [7, 3, 1, "", "to_dict"], [8, 2, 1, "", "unitcell_index"]], "libcasm.clexmonte.EventID": [[10, 3, 1, "", "copy"], [11, 3, 1, "", "from_dict"], [12, 2, 1, "", "prim_event_index"], [13, 3, 1, "", "to_dict"], [14, 2, 1, "", "unitcell_index"]], "libcasm.clexmonte.EventState": [[16, 2, 1, "", "Ekra"], [17, 2, 1, "", "dE_activated"], [18, 2, 1, "", "dE_final"], [19, 2, 1, "", "formation_energy_delta_corr"], [20, 2, 1, "", "freq"], [21, 2, 1, "", "is_allowed"], [22, 2, 1, "", "is_normal"], [23, 2, 1, "", "local_corr"], [24, 2, 1, "", "rate"], [25, 3, 1, "", "to_dict"]], "libcasm.clexmonte.FindMinPotentialConfigs": [[27, 3, 1, "", "check"], [28, 3, 1, "", "reset"]], "libcasm.clexmonte.FixedConfigGenerator": [[30, 3, 1, "", "from_dict"], [31, 3, 1, "", "methodname"], [32, 3, 1, "", "to_dict"]], "libcasm.clexmonte.IncrementalConditionsStateGenerator": [[34, 3, 1, "", "append"], [35, 2, 1, "", "completed_runs"], [36, 3, 1, "", "from_dict"], [37, 2, 1, "", "is_complete"], [38, 3, 1, "", "methodname"], [39, 2, 1, "", "n_completed_runs"], [40, 2, 1, "", "next_state"], [41, 3, 1, "", "read_completed_runs"], [42, 3, 1, "", "to_dict"], [43, 3, 1, "", "write_completed_runs"]], "libcasm.clexmonte.KineticsData": [[45, 2, 1, "", "atom_name_index_list"], [46, 2, 1, "", "atom_positions_cart"], [47, 2, 1, "", "prev_atom_positions_cart"], [48, 2, 1, "", "prev_time"], [49, 2, 1, "", "prev_unique_atom_id"], [50, 2, 1, "", "sampling_fixture"], [51, 2, 1, "", "sampling_fixture_label"], [52, 2, 1, "", "time"], [53, 2, 1, "", "total_rate"], [54, 2, 1, "", "unique_atom_id"]], "libcasm.clexmonte.LocalOrbitCompositionCalculator": [[56, 2, 1, "", "combine_orbits"], [57, 2, 1, "", "local_orbits_sites"], [58, 2, 1, "", "orbits_to_calculate"], [59, 3, 1, "", "value"]], "libcasm.clexmonte.MonteCalculator": [[61, 3, 1, "", "add_discrete_vector_float_function"], [62, 3, 1, "", "add_discrete_vector_int_function"], [63, 3, 1, "", "add_generic_function"], [64, 3, 1, "", "add_partitioned_histogram_function"], [65, 2, 1, "", "analysis_functions"], [66, 3, 1, "", "collect"], [67, 3, 1, "", "collect_hop_correlations"], [68, 3, 1, "", "do_not_collect"], [69, 3, 1, "", "do_not_collect_hop_correlations"], [70, 3, 1, "", "evaluate"], [71, 2, 1, "", "event_data"], [72, 3, 1, "", "event_data_summary"], [73, 2, 1, "", "json_sampling_functions"], [74, 2, 1, "", "kinetics_data"], [75, 3, 1, "", "make_default_sampling_fixture_params"], [76, 3, 1, "", "make_occ_location"], [77, 3, 1, "", "make_sampling_fixture_params_from_dict"], [78, 2, 1, "", "modifying_functions"], [79, 2, 1, "", "name"], [80, 2, 1, "", "potential"], [81, 3, 1, "", "run"], [82, 3, 1, "", "run_fixture"], [83, 2, 1, "", "run_manager"], [84, 2, 1, "", "sampling_functions"], [85, 2, 1, "", "selected_event"], [86, 2, 1, "", "selected_event_data"], [87, 2, 1, "", "selected_event_function_params"], [88, 2, 1, "", "selected_event_functions"], [89, 3, 1, "", "set_event_data"], [90, 3, 1, "", "set_state_and_potential"], [91, 2, 1, "", "state_data"], [92, 2, 1, "", "system"], [93, 2, 1, "", "time_sampling_allowed"]], "libcasm.clexmonte.MonteCarloState": [[95, 2, 1, "", "conditions"], [96, 2, 1, "", "configuration"], [97, 3, 1, "", "from_dict"], [98, 2, 1, "", "properties"], [99, 3, 1, "", "to_dict"]], "libcasm.clexmonte.MonteEventData": [[101, 3, 1, "", "event_impact"], [102, 2, 1, "", "event_list"], [103, 3, 1, "", "event_rate"], [104, 3, 1, "", "event_state"], [105, 3, 1, "", "event_to_apply"], [106, 2, 1, "", "prim_event_list"]], "libcasm.clexmonte.MonteEventDataSummary": [[108, 3, 1, "", "to_dict"]], "libcasm.clexmonte.MonteEventList": [[110, 3, 1, "", "total_rate"]], "libcasm.clexmonte.MontePotential": [[112, 3, 1, "", "occ_delta_per_supercell"], [113, 3, 1, "", "per_supercell"], [114, 3, 1, "", "per_unitcell"], [115, 2, 1, "", "state_data"]], "libcasm.clexmonte.PrimEventData": [[117, 2, 1, "", "equivalent_index"], [118, 2, 1, "", "event"], [119, 2, 1, "", "event_type_name"], [120, 2, 1, "", "is_forward"], [121, 3, 1, "", "occ_final"], [122, 3, 1, "", "occ_init"], [123, 2, 1, "", "prim_event_index"], [124, 3, 1, "", "sites"], [125, 3, 1, "", "to_dict"]], "libcasm.clexmonte.PrimEventList": [[127, 3, 1, "", "append"], [128, 3, 1, "", "clear"], [129, 3, 1, "", "extend"], [130, 3, 1, "", "insert"], [131, 3, 1, "", "pop"]], "libcasm.clexmonte.Results": [[133, 2, 1, "", "analysis"], [134, 2, 1, "", "analysis_functions"], [135, 2, 1, "", "completion_check_results"], [136, 2, 1, "", "elapsed_clocktime"], [137, 2, 1, "", "json_sampler_names"], [138, 2, 1, "", "json_samplers"], [139, 2, 1, "", "json_sampling_functions"], [140, 2, 1, "", "n_accept"], [141, 2, 1, "", "n_reject"], [142, 2, 1, "", "sample_clocktime"], [143, 2, 1, "", "sample_count"], [144, 2, 1, "", "sample_time"], [145, 2, 1, "", "sample_trajectory"], [146, 2, 1, "", "sample_weight"], [147, 2, 1, "", "sampler_names"], [148, 2, 1, "", "samplers"], [149, 2, 1, "", "sampling_functions"]], "libcasm.clexmonte.ResultsAnalysisFunction": [[151, 2, 1, "", "component_names"], [152, 2, 1, "", "description"], [153, 2, 1, "", "function"], [154, 2, 1, "", "name"], [155, 2, 1, "", "shape"]], "libcasm.clexmonte.ResultsAnalysisFunctionMap": [[157, 3, 1, "", "items"], [158, 3, 1, "", "keys"], [159, 3, 1, "", "values"]], "libcasm.clexmonte.RunData": [[161, 4, 1, "", "conditions"], [162, 4, 1, "", "final_state"], [163, 3, 1, "", "from_dict"], [164, 4, 1, "", "initial_state"], [165, 4, 1, "", "n_unitcells"], [166, 3, 1, "", "to_dict"], [167, 4, 1, "", "transformation_matrix_to_super"]], "libcasm.clexmonte.RunDataOutputParams": [[169, 4, 1, "", "do_save_all_final_states"], [170, 4, 1, "", "do_save_all_initial_states"], [171, 4, 1, "", "do_save_last_final_state"], [172, 3, 1, "", "from_dict"], [173, 4, 1, "", "output_dir"], [174, 3, 1, "", "to_dict"], [175, 4, 1, "", "write_final_states"], [176, 4, 1, "", "write_initial_states"], [177, 4, 1, "", "write_prim_basis"]], "libcasm.clexmonte.RunManager": [[179, 2, 1, "", "engine"], [180, 2, 1, "", "global_cutoff"], [181, 2, 1, "", "run_index"], [182, 3, 1, "", "sampling_fixture"], [183, 2, 1, "", "sampling_fixture_labels"], [184, 2, 1, "", "sampling_fixtures"]], "libcasm.clexmonte.SamplingFixture": [[186, 2, 1, "", "count"], [187, 2, 1, "", "label"], [188, 2, 1, "", "n_pass"], [189, 2, 1, "", "n_step"], [190, 2, 1, "", "params"], [191, 2, 1, "", "results"], [192, 2, 1, "", "sample_mode"], [193, 2, 1, "", "steps_per_pass"]], "libcasm.clexmonte.SamplingFixtureParams": [[195, 3, 1, "", "add_analysis_function"], [196, 3, 1, "", "add_json_sampling_function"], [197, 3, 1, "", "add_sampling_function"], [198, 2, 1, "", "analysis_functions"], [199, 2, 1, "", "analysis_names"], [200, 3, 1, "", "append_to_analysis_names"], [201, 3, 1, "", "clear_cutoffs"], [202, 2, 1, "", "completion_check_params"], [203, 3, 1, "", "converge"], [204, 3, 1, "", "do_not_converge"], [205, 3, 1, "", "do_not_perform_analysis"], [206, 3, 1, "", "do_not_sample"], [207, 3, 1, "", "extend_analysis_names"], [208, 3, 1, "", "from_dict"], [209, 2, 1, "", "json_sampling_functions"], [210, 2, 1, "", "label"], [211, 2, 1, "", "method_log"], [212, 3, 1, "", "perform_analysis"], [213, 3, 1, "", "remove_from_analysis_names"], [214, 3, 1, "", "sample"], [215, 3, 1, "", "sample_by_pass"], [216, 3, 1, "", "sample_by_step"], [217, 3, 1, "", "sample_by_time"], [218, 2, 1, "", "sampling_functions"], [219, 2, 1, "", "sampling_params"], [220, 3, 1, "", "set_completion_check_spacing"], [221, 3, 1, "", "set_io_params"], [222, 3, 1, "", "set_max_clocktime"], [223, 3, 1, "", "set_max_count"], [224, 3, 1, "", "set_max_sample"], [225, 3, 1, "", "set_max_time"], [226, 3, 1, "", "set_min_clocktime"], [227, 3, 1, "", "set_min_count"], [228, 3, 1, "", "set_min_sample"], [229, 3, 1, "", "set_min_time"], [230, 3, 1, "", "to_dict"]], "libcasm.clexmonte.SelectedEvent": [[232, 2, 1, "", "event_data"], [233, 2, 1, "", "event_id"], [234, 2, 1, "", "event_index"], [235, 2, 1, "", "event_state"], [236, 2, 1, "", "prim_event_data"], [237, 2, 1, "", "time_increment"], [238, 2, 1, "", "total_rate"]], "libcasm.clexmonte.StateData": [[240, 3, 1, "", "clex"], [241, 2, 1, "", "convert"], [242, 3, 1, "", "corr"], [243, 3, 1, "", "local_clex"], [244, 3, 1, "", "local_corr"], [245, 3, 1, "", "local_multiclex"], [246, 3, 1, "", "local_orbit_composition_calculator"], [247, 3, 1, "", "multiclex"], [248, 2, 1, "", "n_unitcells"], [249, 2, 1, "", "occ_location"], [250, 3, 1, "", "order_parameter"], [251, 2, 1, "", "state"], [252, 2, 1, "", "system"], [253, 2, 1, "", "transformation_matrix_to_super"]], "libcasm.clexmonte.StateModifyingFunction": [[255, 2, 1, "", "description"], [256, 2, 1, "", "function"], [257, 2, 1, "", "name"]], "libcasm.clexmonte.StateModifyingFunctionMap": [[259, 3, 1, "", "items"], [260, 3, 1, "", "keys"], [261, 3, 1, "", "values"]], "libcasm.clexmonte.System": [[263, 2, 1, "", "additional_params"], [264, 3, 1, "", "basis_set"], [265, 3, 1, "", "basis_set_cluster_info"], [266, 2, 1, "", "basis_set_keys"], [267, 3, 1, "", "canonical_swaps"], [268, 3, 1, "", "clex"], [269, 2, 1, "", "clex_keys"], [270, 2, 1, "", "composition_calculator"], [271, 2, 1, "", "composition_converter"], [272, 3, 1, "", "dof_space"], [273, 2, 1, "", "dof_space_keys"], [274, 2, 1, "", "dof_subspace_keys"], [275, 3, 1, "", "equivalents_info"], [276, 2, 1, "", "event_system"], [277, 2, 1, "", "event_type_names"], [278, 3, 1, "", "events"], [279, 3, 1, "", "from_dict"], [280, 3, 1, "", "is_basis_set"], [281, 3, 1, "", "is_clex"], [282, 3, 1, "", "is_local_basis_set"], [283, 3, 1, "", "is_local_clex"], [284, 3, 1, "", "is_local_multiclex"], [285, 3, 1, "", "is_multiclex"], [286, 3, 1, "", "local_basis_set"], [287, 3, 1, "", "local_basis_set_cluster_info"], [288, 2, 1, "", "local_basis_set_keys"], [289, 3, 1, "", "local_clex"], [290, 2, 1, "", "local_clex_keys"], [291, 3, 1, "", "local_multiclex"], [292, 2, 1, "", "local_multiclex_keys"], [293, 3, 1, "", "local_orbit_composition_calculator"], [294, 2, 1, "", "local_orbit_composition_calculator_keys"], [295, 3, 1, "", "make_default_configuration"], [296, 3, 1, "", "make_default_state"], [297, 3, 1, "", "multiclex"], [298, 2, 1, "", "multiclex_keys"], [299, 2, 1, "", "n_dimensions"], [300, 3, 1, "", "occevent_symgroup_rep"], [301, 3, 1, "", "order_parameter"], [302, 3, 1, "", "order_parameter_subspaces"], [303, 2, 1, "", "prim"], [304, 3, 1, "", "prim_event_list"], [305, 2, 1, "", "prim_neighbor_list"], [306, 3, 1, "", "semigrand_canonical_multiswaps"], [307, 3, 1, "", "semigrand_canonical_swaps"], [308, 2, 1, "", "species_list"], [309, 2, 1, "", "xtal_prim"]], "libcasm.clexmonte.parsing": [[314, 5, 1, "", "optional_from_dict"], [315, 5, 1, "", "required_array_from_dict"], [316, 5, 1, "", "required_from_dict"], [317, 5, 1, "", "required_int_array_from_dict"], [318, 5, 1, "", "to_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"about": [0, 2], "bibliographi": 1, "libcasm": [2, 4, 313, 321], "clexmont": [2, 4, 313], "casm": 2, "licens": 2, "document": 2, "instal": 3, "findminpotentialconfig": 26, "check": 27, "reset": 28, "fixedconfiggener": 29, "from_dict": [11, 30, 36, 97, 163, 172, 208, 279], "methodnam": [31, 38], "to_dict": [7, 13, 25, 32, 42, 99, 108, 125, 166, 174, 230, 318], "incrementalconditionsstategener": 33, "append": [34, 127], "completed_run": 35, "is_complet": 37, "n_completed_run": 39, "next_stat": 40, "read_completed_run": 41, "write_completed_run": 43, "montecalcul": [60, 323], "analysis_funct": [65, 134, 198], "json_sampling_funct": [73, 139, 209], "make_default_sampling_fixture_param": 75, "make_sampling_fixture_params_from_dict": 77, "modifying_funct": 78, "name": [79, 154, 257], "potenti": 80, "run": [81, 323], "run_fixtur": 82, "sampling_funct": [84, 149, 218], "set_state_and_potenti": 90, "state_data": [91, 115], "system": [92, 252, 262, 323], "time_sampling_allow": 93, "montecarlost": [94, 323], "condit": [95, 161], "configur": [3, 96], "properti": 98, "montepotenti": 111, "occ_delta_per_supercel": 112, "per_supercel": 113, "per_unitcel": 114, "result": [132, 191], "analysi": 133, "completion_check_result": 135, "elapsed_clocktim": 136, "json_sampler_nam": 137, "json_sampl": 138, "n_accept": 140, "n_reject": 141, "sample_clocktim": 142, "sample_count": 143, "sample_tim": 144, "sample_trajectori": 145, "sample_weight": 146, "sampler_nam": 147, "sampler": 148, "resultsanalysisfunct": 150, "component_nam": 151, "descript": [152, 255], "function": [153, 256], "shape": 155, "resultsanalysisfunctionmap": 156, "item": [157, 259], "kei": [158, 260], "valu": [59, 159, 261], "rundata": 160, "final_st": 162, "initial_st": 164, "n_unitcel": [165, 248], "transformation_matrix_to_sup": [167, 253], "rundataoutputparam": 168, "do_save_all_final_st": 169, "do_save_all_initial_st": 170, "do_save_last_final_st": 171, "output_dir": 173, "write_final_st": 175, "write_initial_st": 176, "write_prim_basi": 177, "runmanag": [178, 323], "engin": 179, "global_cutoff": 180, "run_index": 181, "sampling_fixtur": [50, 182, 184], "sampling_fixture_label": [51, 183], "samplingfixtur": 185, "label": [187, 210], "param": 190, "samplingfixtureparam": [194, 323], "completion_check_param": 202, "converg": 203, "method_log": 211, "sampling_param": 219, "statedata": 239, "clex": [240, 268], "corr": 242, "local_clex": [243, 289], "local_corr": [23, 244], "local_multiclex": [245, 291], "multiclex": [247, 297], "occ_loc": 249, "order_paramet": [250, 301], "state": 251, "statemodifyingfunct": 254, "statemodifyingfunctionmap": 258, "basis_set": 264, "basis_set_kei": 266, "canonical_swap": 267, "clex_kei": 269, "composition_calcul": 270, "composition_convert": 271, "dof_spac": 272, "dof_space_kei": 273, "dof_subspace_kei": 274, "is_basis_set": 280, "is_clex": 281, "is_local_basis_set": 282, "is_local_clex": 283, "is_local_multiclex": 284, "is_multiclex": 285, "local_basis_set": 286, "local_basis_set_kei": 288, "local_clex_kei": 290, "local_multiclex_kei": 292, "make_default_configur": 295, "make_default_st": 296, "multiclex_kei": 298, "n_dimens": 299, "order_parameter_subspac": 302, "prim": 303, "prim_neighbor_list": 305, "semigrand_canonical_multiswap": 306, "semigrand_canonical_swap": 307, "species_list": 308, "xtal_prim": 309, "enforce_composit": 310, "make_canonical_initial_st": 311, "make_initial_st": 312, "pars": 313, "optional_from_dict": 314, "required_array_from_dict": 315, "required_from_dict": 316, "required_int_array_from_dict": 317, "scale_supercel": 320, "refer": 321, "usag": 322, "overview": 323, "gener": 323, "approach": 323, "mont": 323, "carlo": 323, "simul": 323, "from": 3, "pypi": 3, "environ": 3, "sourc": 3, "For": 3, "contributor": 3, "eventdata": 5, "event": [6, 118, 278], "unitcell_index": [8, 14], "eventid": 9, "copi": 10, "prim_event_index": [12, 123], "eventst": 15, "ekra": 16, "de_activ": 17, "de_fin": 18, "formation_energy_delta_corr": 19, "freq": 20, "is_allow": 21, "is_norm": 22, "rate": 24, "kineticsdata": 44, "atom_name_index_list": 45, "atom_positions_cart": 46, "prev_atom_positions_cart": 47, "prev_tim": 48, "prev_unique_atom_id": 49, "time": 52, "total_r": [53, 110, 238], "unique_atom_id": 54, "localorbitcompositioncalcul": 55, "combine_orbit": 56, "local_orbits_sit": 57, "orbits_to_calcul": 58, "add_discrete_vector_float_funct": 61, "add_discrete_vector_int_funct": 62, "add_generic_funct": 63, "add_partitioned_histogram_funct": 64, "collect": 66, "collect_hop_correl": 67, "do_not_collect": 68, "do_not_collect_hop_correl": 69, "evalu": 70, "event_data": [71, 232], "event_data_summari": 72, "kinetics_data": 74, "make_occ_loc": 76, "run_manag": 83, "selected_ev": 85, "selected_event_data": 86, "selected_event_function_param": 87, "selected_event_funct": 88, "set_event_data": 89, "monteeventdata": 100, "event_impact": 101, "event_list": 102, "event_r": 103, "event_st": [104, 235], "event_to_appli": 105, "prim_event_list": [106, 304], "monteeventdatasummari": 107, "monteeventlist": 109, "primeventdata": 116, "equivalent_index": 117, "event_type_nam": [119, 277], "is_forward": 120, "occ_fin": 121, "occ_init": 122, "site": 124, "primeventlist": 126, "clear": 128, "extend": 129, "insert": 130, "pop": 131, "count": 186, "n_pass": 188, "n_step": 189, "sample_mod": 192, "steps_per_pass": 193, "add_analysis_funct": 195, "add_json_sampling_funct": 196, "add_sampling_funct": 197, "analysis_nam": 199, "append_to_analysis_nam": 200, "clear_cutoff": 201, "do_not_converg": 204, "do_not_perform_analysi": 205, "do_not_sampl": 206, "extend_analysis_nam": 207, "perform_analysi": 212, "remove_from_analysis_nam": 213, "sampl": 214, "sample_by_pass": 215, "sample_by_step": 216, "sample_by_tim": 217, "set_completion_check_spac": 220, "set_io_param": 221, "set_max_clocktim": 222, "set_max_count": 223, "set_max_sampl": 224, "set_max_tim": 225, "set_min_clocktim": 226, "set_min_count": 227, "set_min_sampl": 228, "set_min_tim": 229, "selectedev": 231, "event_id": 233, "event_index": 234, "prim_event_data": 236, "time_incr": 237, "convert": 241, "local_orbit_composition_calcul": [246, 293], "additional_param": 263, "basis_set_cluster_info": 265, "equivalents_info": 275, "event_system": 276, "local_basis_set_cluster_info": 287, "local_orbit_composition_calculator_kei": 294, "occevent_symgroup_rep": 300, "print_selected_event_funct": 319, "selectedeventfunctionparam": 323}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"]], "Bibliography": [[1, "bibliography"]], "libcasm-clexmonte": [[2, "libcasm-clexmonte"]], "About CASM": [[2, "about-casm"]], "License": [[2, "license"]], "Documentation": [[2, "documentation"]], "Installation": [[3, "installation"]], "Install from PyPI": [[3, "install-from-pypi"]], "Environment configuration": [[3, "environment-configuration"]], "Install from source": [[3, "install-from-source"]], "For contributors": [[3, "for-contributors"]], "libcasm.clexmonte": [[4, "module-libcasm.clexmonte"]], "EventData": [[5, "eventdata"]], "event": [[6, "event"], [118, "event"]], "to_dict": [[7, "to-dict"], [13, "to-dict"], [25, "to-dict"], [32, "to-dict"], [42, "to-dict"], [99, "to-dict"], [108, "to-dict"], [125, "to-dict"], [166, "to-dict"], [174, "to-dict"], [230, "to-dict"], [318, "to-dict"]], "unitcell_index": [[8, "unitcell-index"], [14, "unitcell-index"]], "EventID": [[9, "eventid"]], "copy": [[10, "copy"]], "from_dict": [[11, "from-dict"], [30, "from-dict"], [36, "from-dict"], [97, "from-dict"], [163, "from-dict"], [172, "from-dict"], [208, "from-dict"], [279, "from-dict"]], "prim_event_index": [[12, "prim-event-index"], [123, "prim-event-index"]], "EventState": [[15, "eventstate"]], "Ekra": [[16, "ekra"]], "dE_activated": [[17, "de-activated"]], "dE_final": [[18, "de-final"]], "formation_energy_delta_corr": [[19, "formation-energy-delta-corr"]], "freq": [[20, "freq"]], "is_allowed": [[21, "is-allowed"]], "is_normal": [[22, "is-normal"]], "local_corr": [[23, "local-corr"], [244, "local-corr"]], "rate": [[24, "rate"]], "FindMinPotentialConfigs": [[26, "findminpotentialconfigs"]], "check": [[27, "check"]], "reset": [[28, "reset"]], "FixedConfigGenerator": [[29, "fixedconfiggenerator"]], "methodname": [[31, "methodname"], [38, "methodname"]], "IncrementalConditionsStateGenerator": [[33, "incrementalconditionsstategenerator"]], "append": [[34, "append"], [127, "append"]], "completed_runs": [[35, "completed-runs"]], "is_complete": [[37, "is-complete"]], "n_completed_runs": [[39, "n-completed-runs"]], "next_state": [[40, "next-state"]], "read_completed_runs": [[41, "read-completed-runs"]], "write_completed_runs": [[43, "write-completed-runs"]], "KineticsData": [[44, "kineticsdata"]], "atom_name_index_list": [[45, "atom-name-index-list"]], "atom_positions_cart": [[46, "atom-positions-cart"]], "prev_atom_positions_cart": [[47, "prev-atom-positions-cart"]], "prev_time": [[48, "prev-time"]], "prev_unique_atom_id": [[49, "prev-unique-atom-id"]], "sampling_fixture": [[50, "sampling-fixture"], [182, "sampling-fixture"]], "sampling_fixture_label": [[51, "sampling-fixture-label"]], "time": [[52, "time"]], "total_rate": [[53, "total-rate"], [110, "total-rate"], [238, "total-rate"]], "unique_atom_id": [[54, "unique-atom-id"]], "LocalOrbitCompositionCalculator": [[55, "localorbitcompositioncalculator"]], "combine_orbits": [[56, "combine-orbits"]], "local_orbits_sites": [[57, "local-orbits-sites"]], "orbits_to_calculate": [[58, "orbits-to-calculate"]], "value": [[59, "value"]], "MonteCalculator": [[60, "montecalculator"], [323, "montecalculator"]], "add_discrete_vector_float_function": [[61, "add-discrete-vector-float-function"]], "add_discrete_vector_int_function": [[62, "add-discrete-vector-int-function"]], "add_generic_function": [[63, "add-generic-function"]], "add_partitioned_histogram_function": [[64, "add-partitioned-histogram-function"]], "analysis_functions": [[65, "analysis-functions"], [134, "analysis-functions"], [198, "analysis-functions"]], "collect": [[66, "collect"]], "collect_hop_correlations": [[67, "collect-hop-correlations"]], "do_not_collect": [[68, "do-not-collect"]], "do_not_collect_hop_correlations": [[69, "do-not-collect-hop-correlations"]], "evaluate": [[70, "evaluate"]], "event_data": [[71, "event-data"], [232, "event-data"]], "event_data_summary": [[72, "event-data-summary"]], "json_sampling_functions": [[73, "json-sampling-functions"], [139, "json-sampling-functions"], [209, "json-sampling-functions"]], "kinetics_data": [[74, "kinetics-data"]], "make_default_sampling_fixture_params": [[75, "make-default-sampling-fixture-params"]], "make_occ_location": [[76, "make-occ-location"]], "make_sampling_fixture_params_from_dict": [[77, "make-sampling-fixture-params-from-dict"]], "modifying_functions": [[78, "modifying-functions"]], "name": [[79, "name"], [154, "name"], [257, "name"]], "potential": [[80, "potential"]], "run": [[81, "run"]], "run_fixture": [[82, "run-fixture"]], "run_manager": [[83, "run-manager"]], "sampling_functions": [[84, "sampling-functions"], [149, "sampling-functions"], [218, "sampling-functions"]], "selected_event": [[85, "selected-event"]], "selected_event_data": [[86, "selected-event-data"]], "selected_event_function_params": [[87, "selected-event-function-params"]], "selected_event_functions": [[88, "selected-event-functions"]], "set_event_data": [[89, "set-event-data"]], "set_state_and_potential": [[90, "set-state-and-potential"]], "state_data": [[91, "state-data"], [115, "state-data"]], "system": [[92, "system"], [252, "system"]], "time_sampling_allowed": [[93, "time-sampling-allowed"]], "MonteCarloState": [[94, "montecarlostate"], [323, "montecarlostate"]], "conditions": [[95, "conditions"], [161, "conditions"]], "configuration": [[96, "configuration"]], "properties": [[98, "properties"]], "MonteEventData": [[100, "monteeventdata"]], "event_impact": [[101, "event-impact"]], "event_list": [[102, "event-list"]], "event_rate": [[103, "event-rate"]], "event_state": [[104, "event-state"], [235, "event-state"]], "event_to_apply": [[105, "event-to-apply"]], "prim_event_list": [[106, "prim-event-list"], [304, "prim-event-list"]], "MonteEventDataSummary": [[107, "monteeventdatasummary"]], "MonteEventList": [[109, "monteeventlist"]], "MontePotential": [[111, "montepotential"]], "occ_delta_per_supercell": [[112, "occ-delta-per-supercell"]], "per_supercell": [[113, "per-supercell"]], "per_unitcell": [[114, "per-unitcell"]], "PrimEventData": [[116, "primeventdata"]], "equivalent_index": [[117, "equivalent-index"]], "event_type_name": [[119, "event-type-name"]], "is_forward": [[120, "is-forward"]], "occ_final": [[121, "occ-final"]], "occ_init": [[122, "occ-init"]], "sites": [[124, "sites"]], "PrimEventList": [[126, "primeventlist"]], "clear": [[128, "clear"]], "extend": [[129, "extend"]], "insert": [[130, "insert"]], "pop": [[131, "pop"]], "Results": [[132, "results"]], "analysis": [[133, "analysis"]], "completion_check_results": [[135, "completion-check-results"]], "elapsed_clocktime": [[136, "elapsed-clocktime"]], "json_sampler_names": [[137, "json-sampler-names"]], "json_samplers": [[138, "json-samplers"]], "n_accept": [[140, "n-accept"]], "n_reject": [[141, "n-reject"]], "sample_clocktime": [[142, "sample-clocktime"]], "sample_count": [[143, "sample-count"]], "sample_time": [[144, "sample-time"]], "sample_trajectory": [[145, "sample-trajectory"]], "sample_weight": [[146, "sample-weight"]], "sampler_names": [[147, "sampler-names"]], "samplers": [[148, "samplers"]], "ResultsAnalysisFunction": [[150, "resultsanalysisfunction"]], "component_names": [[151, "component-names"]], "description": [[152, "description"], [255, "description"]], "function": [[153, "function"], [256, "function"]], "shape": [[155, "shape"]], "ResultsAnalysisFunctionMap": [[156, "resultsanalysisfunctionmap"]], "items": [[157, "items"], [259, "items"]], "keys": [[158, "keys"], [260, "keys"]], "values": [[159, "values"], [261, "values"]], "RunData": [[160, "rundata"]], "final_state": [[162, "final-state"]], "initial_state": [[164, "initial-state"]], "n_unitcells": [[165, "n-unitcells"], [248, "n-unitcells"]], "transformation_matrix_to_super": [[167, "transformation-matrix-to-super"], [253, "transformation-matrix-to-super"]], "RunDataOutputParams": [[168, "rundataoutputparams"]], "do_save_all_final_states": [[169, "do-save-all-final-states"]], "do_save_all_initial_states": [[170, "do-save-all-initial-states"]], "do_save_last_final_state": [[171, "do-save-last-final-state"]], "output_dir": [[173, "output-dir"]], "write_final_states": [[175, "write-final-states"]], "write_initial_states": [[176, "write-initial-states"]], "write_prim_basis": [[177, "write-prim-basis"]], "RunManager": [[178, "runmanager"], [323, "runmanager"]], "engine": [[179, "engine"]], "global_cutoff": [[180, "global-cutoff"]], "run_index": [[181, "run-index"]], "sampling_fixture_labels": [[183, "sampling-fixture-labels"]], "sampling_fixtures": [[184, "sampling-fixtures"]], "SamplingFixture": [[185, "samplingfixture"]], "count": [[186, "count"]], "label": [[187, "label"], [210, "label"]], "n_pass": [[188, "n-pass"]], "n_step": [[189, "n-step"]], "params": [[190, "params"]], "results": [[191, "results"]], "sample_mode": [[192, "sample-mode"]], "steps_per_pass": [[193, "steps-per-pass"]], "SamplingFixtureParams": [[194, "samplingfixtureparams"], [323, "samplingfixtureparams"]], "add_analysis_function": [[195, "add-analysis-function"]], "add_json_sampling_function": [[196, "add-json-sampling-function"]], "add_sampling_function": [[197, "add-sampling-function"]], "analysis_names": [[199, "analysis-names"]], "append_to_analysis_names": [[200, "append-to-analysis-names"]], "clear_cutoffs": [[201, "clear-cutoffs"]], "completion_check_params": [[202, "completion-check-params"]], "converge": [[203, "converge"]], "do_not_converge": [[204, "do-not-converge"]], "do_not_perform_analysis": [[205, "do-not-perform-analysis"]], "do_not_sample": [[206, "do-not-sample"]], "extend_analysis_names": [[207, "extend-analysis-names"]], "method_log": [[211, "method-log"]], "perform_analysis": [[212, "perform-analysis"]], "remove_from_analysis_names": [[213, "remove-from-analysis-names"]], "sample": [[214, "sample"]], "sample_by_pass": [[215, "sample-by-pass"]], "sample_by_step": [[216, "sample-by-step"]], "sample_by_time": [[217, "sample-by-time"]], "sampling_params": [[219, "sampling-params"]], "set_completion_check_spacing": [[220, "set-completion-check-spacing"]], "set_io_params": [[221, "set-io-params"]], "set_max_clocktime": [[222, "set-max-clocktime"]], "set_max_count": [[223, "set-max-count"]], "set_max_sample": [[224, "set-max-sample"]], "set_max_time": [[225, "set-max-time"]], "set_min_clocktime": [[226, "set-min-clocktime"]], "set_min_count": [[227, "set-min-count"]], "set_min_sample": [[228, "set-min-sample"]], "set_min_time": [[229, "set-min-time"]], "SelectedEvent": [[231, "selectedevent"]], "event_id": [[233, "event-id"]], "event_index": [[234, "event-index"]], "prim_event_data": [[236, "prim-event-data"]], "time_increment": [[237, "time-increment"]], "StateData": [[239, "statedata"]], "clex": [[240, "clex"], [268, "clex"]], "convert": [[241, "convert"]], "corr": [[242, "corr"]], "local_clex": [[243, "local-clex"], [289, "local-clex"]], "local_multiclex": [[245, "local-multiclex"], [291, "local-multiclex"]], "local_orbit_composition_calculator": [[246, "local-orbit-composition-calculator"], [293, "local-orbit-composition-calculator"]], "multiclex": [[247, "multiclex"], [297, "multiclex"]], "occ_location": [[249, "occ-location"]], "order_parameter": [[250, "order-parameter"], [301, "order-parameter"]], "state": [[251, "state"]], "StateModifyingFunction": [[254, "statemodifyingfunction"]], "StateModifyingFunctionMap": [[258, "statemodifyingfunctionmap"]], "System": [[262, "system"], [323, "system"]], "additional_params": [[263, "additional-params"]], "basis_set": [[264, "basis-set"]], "basis_set_cluster_info": [[265, "basis-set-cluster-info"]], "basis_set_keys": [[266, "basis-set-keys"]], "canonical_swaps": [[267, "canonical-swaps"]], "clex_keys": [[269, "clex-keys"]], "composition_calculator": [[270, "composition-calculator"]], "composition_converter": [[271, "composition-converter"]], "dof_space": [[272, "dof-space"]], "dof_space_keys": [[273, "dof-space-keys"]], "dof_subspace_keys": [[274, "dof-subspace-keys"]], "equivalents_info": [[275, "equivalents-info"]], "event_system": [[276, "event-system"]], "event_type_names": [[277, "event-type-names"]], "events": [[278, "events"]], "is_basis_set": [[280, "is-basis-set"]], "is_clex": [[281, "is-clex"]], "is_local_basis_set": [[282, "is-local-basis-set"]], "is_local_clex": [[283, "is-local-clex"]], "is_local_multiclex": [[284, "is-local-multiclex"]], "is_multiclex": [[285, "is-multiclex"]], "local_basis_set": [[286, "local-basis-set"]], "local_basis_set_cluster_info": [[287, "local-basis-set-cluster-info"]], "local_basis_set_keys": [[288, "local-basis-set-keys"]], "local_clex_keys": [[290, "local-clex-keys"]], "local_multiclex_keys": [[292, "local-multiclex-keys"]], "local_orbit_composition_calculator_keys": [[294, "local-orbit-composition-calculator-keys"]], "make_default_configuration": [[295, "make-default-configuration"]], "make_default_state": [[296, "make-default-state"]], "multiclex_keys": [[298, "multiclex-keys"]], "n_dimensions": [[299, "n-dimensions"]], "occevent_symgroup_rep": [[300, "occevent-symgroup-rep"]], "order_parameter_subspaces": [[302, "order-parameter-subspaces"]], "prim": [[303, "prim"]], "prim_neighbor_list": [[305, "prim-neighbor-list"]], "semigrand_canonical_multiswaps": [[306, "semigrand-canonical-multiswaps"]], "semigrand_canonical_swaps": [[307, "semigrand-canonical-swaps"]], "species_list": [[308, "species-list"]], "xtal_prim": [[309, "xtal-prim"]], "enforce_composition": [[310, "enforce-composition"]], "make_canonical_initial_state": [[311, "make-canonical-initial-state"]], "make_initial_state": [[312, "make-initial-state"]], "libcasm.clexmonte.parsing": [[313, "module-libcasm.clexmonte.parsing"]], "optional_from_dict": [[314, "optional-from-dict"]], "required_array_from_dict": [[315, "required-array-from-dict"]], "required_from_dict": [[316, "required-from-dict"]], "required_int_array_from_dict": [[317, "required-int-array-from-dict"]], "print_selected_event_functions": [[319, "print-selected-event-functions"]], "scale_supercell": [[320, "scale-supercell"]], "Reference (libcasm)": [[321, "reference-libcasm"]], "Usage": [[322, "usage"]], "Overview": [[323, "overview"]], "General approach": [[323, "general-approach"]], "SelectedEventFunctionParams": [[323, "selectedeventfunctionparams"]], "Running Monte Carlo simulations": [[323, "running-monte-carlo-simulations"]]}, "indexentries": {"libcasm.clexmonte": [[4, "module-libcasm.clexmonte"]], "module": [[4, "module-libcasm.clexmonte"], [313, "module-libcasm.clexmonte.parsing"]], "eventdata (class in libcasm.clexmonte)": [[5, "libcasm.clexmonte.EventData"]], "event (libcasm.clexmonte.eventdata property)": [[6, "libcasm.clexmonte.EventData.event"]], "to_dict() (libcasm.clexmonte.eventdata method)": [[7, "libcasm.clexmonte.EventData.to_dict"]], "unitcell_index (libcasm.clexmonte.eventdata property)": [[8, "libcasm.clexmonte.EventData.unitcell_index"]], "eventid (class in libcasm.clexmonte)": [[9, "libcasm.clexmonte.EventID"]], "copy() (libcasm.clexmonte.eventid method)": [[10, "libcasm.clexmonte.EventID.copy"]], "from_dict() (libcasm.clexmonte.eventid static method)": [[11, "libcasm.clexmonte.EventID.from_dict"]], "prim_event_index (libcasm.clexmonte.eventid property)": [[12, "libcasm.clexmonte.EventID.prim_event_index"]], "to_dict() (libcasm.clexmonte.eventid method)": [[13, "libcasm.clexmonte.EventID.to_dict"]], "unitcell_index (libcasm.clexmonte.eventid property)": [[14, "libcasm.clexmonte.EventID.unitcell_index"]], "eventstate (class in libcasm.clexmonte)": [[15, "libcasm.clexmonte.EventState"]], "ekra (libcasm.clexmonte.eventstate property)": [[16, "libcasm.clexmonte.EventState.Ekra"]], "de_activated (libcasm.clexmonte.eventstate property)": [[17, "libcasm.clexmonte.EventState.dE_activated"]], "de_final (libcasm.clexmonte.eventstate property)": [[18, "libcasm.clexmonte.EventState.dE_final"]], "formation_energy_delta_corr (libcasm.clexmonte.eventstate property)": [[19, "libcasm.clexmonte.EventState.formation_energy_delta_corr"]], "freq (libcasm.clexmonte.eventstate property)": [[20, "libcasm.clexmonte.EventState.freq"]], "is_allowed (libcasm.clexmonte.eventstate property)": [[21, "libcasm.clexmonte.EventState.is_allowed"]], "is_normal (libcasm.clexmonte.eventstate property)": [[22, "libcasm.clexmonte.EventState.is_normal"]], "local_corr (libcasm.clexmonte.eventstate property)": [[23, "libcasm.clexmonte.EventState.local_corr"]], "rate (libcasm.clexmonte.eventstate property)": [[24, "libcasm.clexmonte.EventState.rate"]], "to_dict() (libcasm.clexmonte.eventstate method)": [[25, "libcasm.clexmonte.EventState.to_dict"]], "findminpotentialconfigs (class in libcasm.clexmonte)": [[26, "libcasm.clexmonte.FindMinPotentialConfigs"]], "check() (libcasm.clexmonte.findminpotentialconfigs method)": [[27, "libcasm.clexmonte.FindMinPotentialConfigs.check"]], "reset() (libcasm.clexmonte.findminpotentialconfigs method)": [[28, "libcasm.clexmonte.FindMinPotentialConfigs.reset"]], "fixedconfiggenerator (class in libcasm.clexmonte)": [[29, "libcasm.clexmonte.FixedConfigGenerator"]], "from_dict() (libcasm.clexmonte.fixedconfiggenerator static method)": [[30, "libcasm.clexmonte.FixedConfigGenerator.from_dict"]], "methodname() (libcasm.clexmonte.fixedconfiggenerator static method)": [[31, "libcasm.clexmonte.FixedConfigGenerator.methodname"]], "to_dict() (libcasm.clexmonte.fixedconfiggenerator method)": [[32, "libcasm.clexmonte.FixedConfigGenerator.to_dict"]], "incrementalconditionsstategenerator (class in libcasm.clexmonte)": [[33, "libcasm.clexmonte.IncrementalConditionsStateGenerator"]], "append() (libcasm.clexmonte.incrementalconditionsstategenerator method)": [[34, "libcasm.clexmonte.IncrementalConditionsStateGenerator.append"]], "completed_runs (libcasm.clexmonte.incrementalconditionsstategenerator property)": [[35, "libcasm.clexmonte.IncrementalConditionsStateGenerator.completed_runs"]], "from_dict() (libcasm.clexmonte.incrementalconditionsstategenerator static method)": [[36, "libcasm.clexmonte.IncrementalConditionsStateGenerator.from_dict"]], "is_complete (libcasm.clexmonte.incrementalconditionsstategenerator property)": [[37, "libcasm.clexmonte.IncrementalConditionsStateGenerator.is_complete"]], "methodname() (libcasm.clexmonte.incrementalconditionsstategenerator static method)": [[38, "libcasm.clexmonte.IncrementalConditionsStateGenerator.methodname"]], "n_completed_runs (libcasm.clexmonte.incrementalconditionsstategenerator property)": [[39, "libcasm.clexmonte.IncrementalConditionsStateGenerator.n_completed_runs"]], "next_state (libcasm.clexmonte.incrementalconditionsstategenerator property)": [[40, "libcasm.clexmonte.IncrementalConditionsStateGenerator.next_state"]], "read_completed_runs() (libcasm.clexmonte.incrementalconditionsstategenerator method)": [[41, "libcasm.clexmonte.IncrementalConditionsStateGenerator.read_completed_runs"]], "to_dict() (libcasm.clexmonte.incrementalconditionsstategenerator method)": [[42, "libcasm.clexmonte.IncrementalConditionsStateGenerator.to_dict"]], "write_completed_runs() (libcasm.clexmonte.incrementalconditionsstategenerator method)": [[43, "libcasm.clexmonte.IncrementalConditionsStateGenerator.write_completed_runs"]], "kineticsdata (class in libcasm.clexmonte)": [[44, "libcasm.clexmonte.KineticsData"]], "atom_name_index_list (libcasm.clexmonte.kineticsdata property)": [[45, "libcasm.clexmonte.KineticsData.atom_name_index_list"]], "atom_positions_cart (libcasm.clexmonte.kineticsdata property)": [[46, "libcasm.clexmonte.KineticsData.atom_positions_cart"]], "prev_atom_positions_cart (libcasm.clexmonte.kineticsdata property)": [[47, "libcasm.clexmonte.KineticsData.prev_atom_positions_cart"]], "prev_time (libcasm.clexmonte.kineticsdata property)": [[48, "libcasm.clexmonte.KineticsData.prev_time"]], "prev_unique_atom_id (libcasm.clexmonte.kineticsdata property)": [[49, "libcasm.clexmonte.KineticsData.prev_unique_atom_id"]], "sampling_fixture (libcasm.clexmonte.kineticsdata property)": [[50, "libcasm.clexmonte.KineticsData.sampling_fixture"]], "sampling_fixture_label (libcasm.clexmonte.kineticsdata property)": [[51, "libcasm.clexmonte.KineticsData.sampling_fixture_label"]], "time (libcasm.clexmonte.kineticsdata property)": [[52, "libcasm.clexmonte.KineticsData.time"]], "total_rate (libcasm.clexmonte.kineticsdata property)": [[53, "libcasm.clexmonte.KineticsData.total_rate"]], "unique_atom_id (libcasm.clexmonte.kineticsdata property)": [[54, "libcasm.clexmonte.KineticsData.unique_atom_id"]], "localorbitcompositioncalculator (class in libcasm.clexmonte)": [[55, "libcasm.clexmonte.LocalOrbitCompositionCalculator"]], "combine_orbits (libcasm.clexmonte.localorbitcompositioncalculator property)": [[56, "libcasm.clexmonte.LocalOrbitCompositionCalculator.combine_orbits"]], "local_orbits_sites (libcasm.clexmonte.localorbitcompositioncalculator property)": [[57, "libcasm.clexmonte.LocalOrbitCompositionCalculator.local_orbits_sites"]], "orbits_to_calculate (libcasm.clexmonte.localorbitcompositioncalculator property)": [[58, "libcasm.clexmonte.LocalOrbitCompositionCalculator.orbits_to_calculate"]], "value() (libcasm.clexmonte.localorbitcompositioncalculator method)": [[59, "libcasm.clexmonte.LocalOrbitCompositionCalculator.value"]], "montecalculator (class in libcasm.clexmonte)": [[60, "libcasm.clexmonte.MonteCalculator"]], "add_discrete_vector_float_function() (libcasm.clexmonte.montecalculator method)": [[61, "libcasm.clexmonte.MonteCalculator.add_discrete_vector_float_function"]], "add_discrete_vector_int_function() (libcasm.clexmonte.montecalculator method)": [[62, "libcasm.clexmonte.MonteCalculator.add_discrete_vector_int_function"]], "add_generic_function() (libcasm.clexmonte.montecalculator method)": [[63, "libcasm.clexmonte.MonteCalculator.add_generic_function"]], "add_partitioned_histogram_function() (libcasm.clexmonte.montecalculator method)": [[64, "libcasm.clexmonte.MonteCalculator.add_partitioned_histogram_function"]], "analysis_functions (libcasm.clexmonte.montecalculator property)": [[65, "libcasm.clexmonte.MonteCalculator.analysis_functions"]], "collect() (libcasm.clexmonte.montecalculator method)": [[66, "libcasm.clexmonte.MonteCalculator.collect"]], "collect_hop_correlations() (libcasm.clexmonte.montecalculator method)": [[67, "libcasm.clexmonte.MonteCalculator.collect_hop_correlations"]], "do_not_collect() (libcasm.clexmonte.montecalculator method)": [[68, "libcasm.clexmonte.MonteCalculator.do_not_collect"]], "do_not_collect_hop_correlations() (libcasm.clexmonte.montecalculator method)": [[69, "libcasm.clexmonte.MonteCalculator.do_not_collect_hop_correlations"]], "evaluate() (libcasm.clexmonte.montecalculator method)": [[70, "libcasm.clexmonte.MonteCalculator.evaluate"]], "event_data (libcasm.clexmonte.montecalculator property)": [[71, "libcasm.clexmonte.MonteCalculator.event_data"]], "event_data_summary() (libcasm.clexmonte.montecalculator method)": [[72, "libcasm.clexmonte.MonteCalculator.event_data_summary"]], "json_sampling_functions (libcasm.clexmonte.montecalculator property)": [[73, "libcasm.clexmonte.MonteCalculator.json_sampling_functions"]], "kinetics_data (libcasm.clexmonte.montecalculator property)": [[74, "libcasm.clexmonte.MonteCalculator.kinetics_data"]], "make_default_sampling_fixture_params() (libcasm.clexmonte.montecalculator method)": [[75, "libcasm.clexmonte.MonteCalculator.make_default_sampling_fixture_params"]], "make_occ_location() (libcasm.clexmonte.montecalculator method)": [[76, "libcasm.clexmonte.MonteCalculator.make_occ_location"]], "make_sampling_fixture_params_from_dict() (libcasm.clexmonte.montecalculator method)": [[77, "libcasm.clexmonte.MonteCalculator.make_sampling_fixture_params_from_dict"]], "modifying_functions (libcasm.clexmonte.montecalculator property)": [[78, "libcasm.clexmonte.MonteCalculator.modifying_functions"]], "name (libcasm.clexmonte.montecalculator property)": [[79, "libcasm.clexmonte.MonteCalculator.name"]], "potential (libcasm.clexmonte.montecalculator property)": [[80, "libcasm.clexmonte.MonteCalculator.potential"]], "run() (libcasm.clexmonte.montecalculator method)": [[81, "libcasm.clexmonte.MonteCalculator.run"]], "run_fixture() (libcasm.clexmonte.montecalculator method)": [[82, "libcasm.clexmonte.MonteCalculator.run_fixture"]], "run_manager (libcasm.clexmonte.montecalculator property)": [[83, "libcasm.clexmonte.MonteCalculator.run_manager"]], "sampling_functions (libcasm.clexmonte.montecalculator property)": [[84, "libcasm.clexmonte.MonteCalculator.sampling_functions"]], "selected_event (libcasm.clexmonte.montecalculator property)": [[85, "libcasm.clexmonte.MonteCalculator.selected_event"]], "selected_event_data (libcasm.clexmonte.montecalculator property)": [[86, "libcasm.clexmonte.MonteCalculator.selected_event_data"]], "selected_event_function_params (libcasm.clexmonte.montecalculator property)": [[87, "libcasm.clexmonte.MonteCalculator.selected_event_function_params"]], "selected_event_functions (libcasm.clexmonte.montecalculator property)": [[88, "libcasm.clexmonte.MonteCalculator.selected_event_functions"]], "set_event_data() (libcasm.clexmonte.montecalculator method)": [[89, "libcasm.clexmonte.MonteCalculator.set_event_data"]], "set_state_and_potential() (libcasm.clexmonte.montecalculator method)": [[90, "libcasm.clexmonte.MonteCalculator.set_state_and_potential"]], "state_data (libcasm.clexmonte.montecalculator property)": [[91, "libcasm.clexmonte.MonteCalculator.state_data"]], "system (libcasm.clexmonte.montecalculator property)": [[92, "libcasm.clexmonte.MonteCalculator.system"]], "time_sampling_allowed (libcasm.clexmonte.montecalculator property)": [[93, "libcasm.clexmonte.MonteCalculator.time_sampling_allowed"]], "montecarlostate (class in libcasm.clexmonte)": [[94, "libcasm.clexmonte.MonteCarloState"]], "conditions (libcasm.clexmonte.montecarlostate property)": [[95, "libcasm.clexmonte.MonteCarloState.conditions"]], "configuration (libcasm.clexmonte.montecarlostate property)": [[96, "libcasm.clexmonte.MonteCarloState.configuration"]], "from_dict() (libcasm.clexmonte.montecarlostate static method)": [[97, "libcasm.clexmonte.MonteCarloState.from_dict"]], "properties (libcasm.clexmonte.montecarlostate property)": [[98, "libcasm.clexmonte.MonteCarloState.properties"]], "to_dict() (libcasm.clexmonte.montecarlostate method)": [[99, "libcasm.clexmonte.MonteCarloState.to_dict"]], "monteeventdata (class in libcasm.clexmonte)": [[100, "libcasm.clexmonte.MonteEventData"]], "event_impact() (libcasm.clexmonte.monteeventdata method)": [[101, "libcasm.clexmonte.MonteEventData.event_impact"]], "event_list (libcasm.clexmonte.monteeventdata property)": [[102, "libcasm.clexmonte.MonteEventData.event_list"]], "event_rate() (libcasm.clexmonte.monteeventdata method)": [[103, "libcasm.clexmonte.MonteEventData.event_rate"]], "event_state() (libcasm.clexmonte.monteeventdata method)": [[104, "libcasm.clexmonte.MonteEventData.event_state"]], "event_to_apply() (libcasm.clexmonte.monteeventdata method)": [[105, "libcasm.clexmonte.MonteEventData.event_to_apply"]], "prim_event_list (libcasm.clexmonte.monteeventdata property)": [[106, "libcasm.clexmonte.MonteEventData.prim_event_list"]], "monteeventdatasummary (class in libcasm.clexmonte)": [[107, "libcasm.clexmonte.MonteEventDataSummary"]], "to_dict() (libcasm.clexmonte.monteeventdatasummary method)": [[108, "libcasm.clexmonte.MonteEventDataSummary.to_dict"]], "monteeventlist (class in libcasm.clexmonte)": [[109, "libcasm.clexmonte.MonteEventList"]], "total_rate() (libcasm.clexmonte.monteeventlist method)": [[110, "libcasm.clexmonte.MonteEventList.total_rate"]], "montepotential (class in libcasm.clexmonte)": [[111, "libcasm.clexmonte.MontePotential"]], "occ_delta_per_supercell() (libcasm.clexmonte.montepotential method)": [[112, "libcasm.clexmonte.MontePotential.occ_delta_per_supercell"]], "per_supercell() (libcasm.clexmonte.montepotential method)": [[113, "libcasm.clexmonte.MontePotential.per_supercell"]], "per_unitcell() (libcasm.clexmonte.montepotential method)": [[114, "libcasm.clexmonte.MontePotential.per_unitcell"]], "state_data (libcasm.clexmonte.montepotential property)": [[115, "libcasm.clexmonte.MontePotential.state_data"]], "primeventdata (class in libcasm.clexmonte)": [[116, "libcasm.clexmonte.PrimEventData"]], "equivalent_index (libcasm.clexmonte.primeventdata property)": [[117, "libcasm.clexmonte.PrimEventData.equivalent_index"]], "event (libcasm.clexmonte.primeventdata property)": [[118, "libcasm.clexmonte.PrimEventData.event"]], "event_type_name (libcasm.clexmonte.primeventdata property)": [[119, "libcasm.clexmonte.PrimEventData.event_type_name"]], "is_forward (libcasm.clexmonte.primeventdata property)": [[120, "libcasm.clexmonte.PrimEventData.is_forward"]], "occ_final() (libcasm.clexmonte.primeventdata method)": [[121, "libcasm.clexmonte.PrimEventData.occ_final"]], "occ_init() (libcasm.clexmonte.primeventdata method)": [[122, "libcasm.clexmonte.PrimEventData.occ_init"]], "prim_event_index (libcasm.clexmonte.primeventdata property)": [[123, "libcasm.clexmonte.PrimEventData.prim_event_index"]], "sites() (libcasm.clexmonte.primeventdata method)": [[124, "libcasm.clexmonte.PrimEventData.sites"]], "to_dict() (libcasm.clexmonte.primeventdata method)": [[125, "libcasm.clexmonte.PrimEventData.to_dict"]], "primeventlist (class in libcasm.clexmonte)": [[126, "libcasm.clexmonte.PrimEventList"]], "append() (libcasm.clexmonte.primeventlist method)": [[127, "libcasm.clexmonte.PrimEventList.append"]], "clear() (libcasm.clexmonte.primeventlist method)": [[128, "libcasm.clexmonte.PrimEventList.clear"]], "extend() (libcasm.clexmonte.primeventlist method)": [[129, "libcasm.clexmonte.PrimEventList.extend"]], "insert() (libcasm.clexmonte.primeventlist method)": [[130, "libcasm.clexmonte.PrimEventList.insert"]], "pop() (libcasm.clexmonte.primeventlist method)": [[131, "libcasm.clexmonte.PrimEventList.pop"]], "results (class in libcasm.clexmonte)": [[132, "libcasm.clexmonte.Results"]], "analysis (libcasm.clexmonte.results property)": [[133, "libcasm.clexmonte.Results.analysis"]], "analysis_functions (libcasm.clexmonte.results property)": [[134, "libcasm.clexmonte.Results.analysis_functions"]], "completion_check_results (libcasm.clexmonte.results property)": [[135, "libcasm.clexmonte.Results.completion_check_results"]], "elapsed_clocktime (libcasm.clexmonte.results property)": [[136, "libcasm.clexmonte.Results.elapsed_clocktime"]], "json_sampler_names (libcasm.clexmonte.results property)": [[137, "libcasm.clexmonte.Results.json_sampler_names"]], "json_samplers (libcasm.clexmonte.results property)": [[138, "libcasm.clexmonte.Results.json_samplers"]], "json_sampling_functions (libcasm.clexmonte.results property)": [[139, "libcasm.clexmonte.Results.json_sampling_functions"]], "n_accept (libcasm.clexmonte.results property)": [[140, "libcasm.clexmonte.Results.n_accept"]], "n_reject (libcasm.clexmonte.results property)": [[141, "libcasm.clexmonte.Results.n_reject"]], "sample_clocktime (libcasm.clexmonte.results property)": [[142, "libcasm.clexmonte.Results.sample_clocktime"]], "sample_count (libcasm.clexmonte.results property)": [[143, "libcasm.clexmonte.Results.sample_count"]], "sample_time (libcasm.clexmonte.results property)": [[144, "libcasm.clexmonte.Results.sample_time"]], "sample_trajectory (libcasm.clexmonte.results property)": [[145, "libcasm.clexmonte.Results.sample_trajectory"]], "sample_weight (libcasm.clexmonte.results property)": [[146, "libcasm.clexmonte.Results.sample_weight"]], "sampler_names (libcasm.clexmonte.results property)": [[147, "libcasm.clexmonte.Results.sampler_names"]], "samplers (libcasm.clexmonte.results property)": [[148, "libcasm.clexmonte.Results.samplers"]], "sampling_functions (libcasm.clexmonte.results property)": [[149, "libcasm.clexmonte.Results.sampling_functions"]], "resultsanalysisfunction (class in libcasm.clexmonte)": [[150, "libcasm.clexmonte.ResultsAnalysisFunction"]], "component_names (libcasm.clexmonte.resultsanalysisfunction property)": [[151, "libcasm.clexmonte.ResultsAnalysisFunction.component_names"]], "description (libcasm.clexmonte.resultsanalysisfunction property)": [[152, "libcasm.clexmonte.ResultsAnalysisFunction.description"]], "function (libcasm.clexmonte.resultsanalysisfunction property)": [[153, "libcasm.clexmonte.ResultsAnalysisFunction.function"]], "name (libcasm.clexmonte.resultsanalysisfunction property)": [[154, "libcasm.clexmonte.ResultsAnalysisFunction.name"]], "shape (libcasm.clexmonte.resultsanalysisfunction property)": [[155, "libcasm.clexmonte.ResultsAnalysisFunction.shape"]], "resultsanalysisfunctionmap (class in libcasm.clexmonte)": [[156, "libcasm.clexmonte.ResultsAnalysisFunctionMap"]], "items() (libcasm.clexmonte.resultsanalysisfunctionmap method)": [[157, "libcasm.clexmonte.ResultsAnalysisFunctionMap.items"]], "keys() (libcasm.clexmonte.resultsanalysisfunctionmap method)": [[158, "libcasm.clexmonte.ResultsAnalysisFunctionMap.keys"]], "values() (libcasm.clexmonte.resultsanalysisfunctionmap method)": [[159, "libcasm.clexmonte.ResultsAnalysisFunctionMap.values"]], "rundata (class in libcasm.clexmonte)": [[160, "libcasm.clexmonte.RunData"]], "conditions (libcasm.clexmonte.rundata attribute)": [[161, "libcasm.clexmonte.RunData.conditions"]], "final_state (libcasm.clexmonte.rundata attribute)": [[162, "libcasm.clexmonte.RunData.final_state"]], "from_dict() (libcasm.clexmonte.rundata static method)": [[163, "libcasm.clexmonte.RunData.from_dict"]], "initial_state (libcasm.clexmonte.rundata attribute)": [[164, "libcasm.clexmonte.RunData.initial_state"]], "n_unitcells (libcasm.clexmonte.rundata attribute)": [[165, "libcasm.clexmonte.RunData.n_unitcells"]], "to_dict() (libcasm.clexmonte.rundata method)": [[166, "libcasm.clexmonte.RunData.to_dict"]], "transformation_matrix_to_super (libcasm.clexmonte.rundata attribute)": [[167, "libcasm.clexmonte.RunData.transformation_matrix_to_super"]], "rundataoutputparams (class in libcasm.clexmonte)": [[168, "libcasm.clexmonte.RunDataOutputParams"]], "do_save_all_final_states (libcasm.clexmonte.rundataoutputparams attribute)": [[169, "libcasm.clexmonte.RunDataOutputParams.do_save_all_final_states"]], "do_save_all_initial_states (libcasm.clexmonte.rundataoutputparams attribute)": [[170, "libcasm.clexmonte.RunDataOutputParams.do_save_all_initial_states"]], "do_save_last_final_state (libcasm.clexmonte.rundataoutputparams attribute)": [[171, "libcasm.clexmonte.RunDataOutputParams.do_save_last_final_state"]], "from_dict() (libcasm.clexmonte.rundataoutputparams static method)": [[172, "libcasm.clexmonte.RunDataOutputParams.from_dict"]], "output_dir (libcasm.clexmonte.rundataoutputparams attribute)": [[173, "libcasm.clexmonte.RunDataOutputParams.output_dir"]], "to_dict() (libcasm.clexmonte.rundataoutputparams method)": [[174, "libcasm.clexmonte.RunDataOutputParams.to_dict"]], "write_final_states (libcasm.clexmonte.rundataoutputparams attribute)": [[175, "libcasm.clexmonte.RunDataOutputParams.write_final_states"]], "write_initial_states (libcasm.clexmonte.rundataoutputparams attribute)": [[176, "libcasm.clexmonte.RunDataOutputParams.write_initial_states"]], "write_prim_basis (libcasm.clexmonte.rundataoutputparams attribute)": [[177, "libcasm.clexmonte.RunDataOutputParams.write_prim_basis"]], "runmanager (class in libcasm.clexmonte)": [[178, "libcasm.clexmonte.RunManager"]], "engine (libcasm.clexmonte.runmanager property)": [[179, "libcasm.clexmonte.RunManager.engine"]], "global_cutoff (libcasm.clexmonte.runmanager property)": [[180, "libcasm.clexmonte.RunManager.global_cutoff"]], "run_index (libcasm.clexmonte.runmanager property)": [[181, "libcasm.clexmonte.RunManager.run_index"]], "sampling_fixture() (libcasm.clexmonte.runmanager method)": [[182, "libcasm.clexmonte.RunManager.sampling_fixture"]], "sampling_fixture_labels (libcasm.clexmonte.runmanager property)": [[183, "libcasm.clexmonte.RunManager.sampling_fixture_labels"]], "sampling_fixtures (libcasm.clexmonte.runmanager property)": [[184, "libcasm.clexmonte.RunManager.sampling_fixtures"]], "samplingfixture (class in libcasm.clexmonte)": [[185, "libcasm.clexmonte.SamplingFixture"]], "count (libcasm.clexmonte.samplingfixture property)": [[186, "libcasm.clexmonte.SamplingFixture.count"]], "label (libcasm.clexmonte.samplingfixture property)": [[187, "libcasm.clexmonte.SamplingFixture.label"]], "n_pass (libcasm.clexmonte.samplingfixture property)": [[188, "libcasm.clexmonte.SamplingFixture.n_pass"]], "n_step (libcasm.clexmonte.samplingfixture property)": [[189, "libcasm.clexmonte.SamplingFixture.n_step"]], "params (libcasm.clexmonte.samplingfixture property)": [[190, "libcasm.clexmonte.SamplingFixture.params"]], "results (libcasm.clexmonte.samplingfixture property)": [[191, "libcasm.clexmonte.SamplingFixture.results"]], "sample_mode (libcasm.clexmonte.samplingfixture property)": [[192, "libcasm.clexmonte.SamplingFixture.sample_mode"]], "steps_per_pass (libcasm.clexmonte.samplingfixture property)": [[193, "libcasm.clexmonte.SamplingFixture.steps_per_pass"]], "samplingfixtureparams (class in libcasm.clexmonte)": [[194, "libcasm.clexmonte.SamplingFixtureParams"]], "add_analysis_function() (libcasm.clexmonte.samplingfixtureparams method)": [[195, "libcasm.clexmonte.SamplingFixtureParams.add_analysis_function"]], "add_json_sampling_function() (libcasm.clexmonte.samplingfixtureparams method)": [[196, "libcasm.clexmonte.SamplingFixtureParams.add_json_sampling_function"]], "add_sampling_function() (libcasm.clexmonte.samplingfixtureparams method)": [[197, "libcasm.clexmonte.SamplingFixtureParams.add_sampling_function"]], "analysis_functions (libcasm.clexmonte.samplingfixtureparams property)": [[198, "libcasm.clexmonte.SamplingFixtureParams.analysis_functions"]], "analysis_names (libcasm.clexmonte.samplingfixtureparams property)": [[199, "libcasm.clexmonte.SamplingFixtureParams.analysis_names"]], "append_to_analysis_names() (libcasm.clexmonte.samplingfixtureparams method)": [[200, "libcasm.clexmonte.SamplingFixtureParams.append_to_analysis_names"]], "clear_cutoffs() (libcasm.clexmonte.samplingfixtureparams method)": [[201, "libcasm.clexmonte.SamplingFixtureParams.clear_cutoffs"]], "completion_check_params (libcasm.clexmonte.samplingfixtureparams property)": [[202, "libcasm.clexmonte.SamplingFixtureParams.completion_check_params"]], "converge() (libcasm.clexmonte.samplingfixtureparams method)": [[203, "libcasm.clexmonte.SamplingFixtureParams.converge"]], "do_not_converge() (libcasm.clexmonte.samplingfixtureparams method)": [[204, "libcasm.clexmonte.SamplingFixtureParams.do_not_converge"]], "do_not_perform_analysis() (libcasm.clexmonte.samplingfixtureparams method)": [[205, "libcasm.clexmonte.SamplingFixtureParams.do_not_perform_analysis"]], "do_not_sample() (libcasm.clexmonte.samplingfixtureparams method)": [[206, "libcasm.clexmonte.SamplingFixtureParams.do_not_sample"]], "extend_analysis_names() (libcasm.clexmonte.samplingfixtureparams method)": [[207, "libcasm.clexmonte.SamplingFixtureParams.extend_analysis_names"]], "from_dict() (libcasm.clexmonte.samplingfixtureparams static method)": [[208, "libcasm.clexmonte.SamplingFixtureParams.from_dict"]], "json_sampling_functions (libcasm.clexmonte.samplingfixtureparams property)": [[209, "libcasm.clexmonte.SamplingFixtureParams.json_sampling_functions"]], "label (libcasm.clexmonte.samplingfixtureparams property)": [[210, "libcasm.clexmonte.SamplingFixtureParams.label"]], "method_log (libcasm.clexmonte.samplingfixtureparams property)": [[211, "libcasm.clexmonte.SamplingFixtureParams.method_log"]], "perform_analysis() (libcasm.clexmonte.samplingfixtureparams method)": [[212, "libcasm.clexmonte.SamplingFixtureParams.perform_analysis"]], "remove_from_analysis_names() (libcasm.clexmonte.samplingfixtureparams method)": [[213, "libcasm.clexmonte.SamplingFixtureParams.remove_from_analysis_names"]], "sample() (libcasm.clexmonte.samplingfixtureparams method)": [[214, "libcasm.clexmonte.SamplingFixtureParams.sample"]], "sample_by_pass() (libcasm.clexmonte.samplingfixtureparams method)": [[215, "libcasm.clexmonte.SamplingFixtureParams.sample_by_pass"]], "sample_by_step() (libcasm.clexmonte.samplingfixtureparams method)": [[216, "libcasm.clexmonte.SamplingFixtureParams.sample_by_step"]], "sample_by_time() (libcasm.clexmonte.samplingfixtureparams method)": [[217, "libcasm.clexmonte.SamplingFixtureParams.sample_by_time"]], "sampling_functions (libcasm.clexmonte.samplingfixtureparams property)": [[218, "libcasm.clexmonte.SamplingFixtureParams.sampling_functions"]], "sampling_params (libcasm.clexmonte.samplingfixtureparams property)": [[219, "libcasm.clexmonte.SamplingFixtureParams.sampling_params"]], "set_completion_check_spacing() (libcasm.clexmonte.samplingfixtureparams method)": [[220, "libcasm.clexmonte.SamplingFixtureParams.set_completion_check_spacing"]], "set_io_params() (libcasm.clexmonte.samplingfixtureparams method)": [[221, "libcasm.clexmonte.SamplingFixtureParams.set_io_params"]], "set_max_clocktime() (libcasm.clexmonte.samplingfixtureparams method)": [[222, "libcasm.clexmonte.SamplingFixtureParams.set_max_clocktime"]], "set_max_count() (libcasm.clexmonte.samplingfixtureparams method)": [[223, "libcasm.clexmonte.SamplingFixtureParams.set_max_count"]], "set_max_sample() (libcasm.clexmonte.samplingfixtureparams method)": [[224, "libcasm.clexmonte.SamplingFixtureParams.set_max_sample"]], "set_max_time() (libcasm.clexmonte.samplingfixtureparams method)": [[225, "libcasm.clexmonte.SamplingFixtureParams.set_max_time"]], "set_min_clocktime() (libcasm.clexmonte.samplingfixtureparams method)": [[226, "libcasm.clexmonte.SamplingFixtureParams.set_min_clocktime"]], "set_min_count() (libcasm.clexmonte.samplingfixtureparams method)": [[227, "libcasm.clexmonte.SamplingFixtureParams.set_min_count"]], "set_min_sample() (libcasm.clexmonte.samplingfixtureparams method)": [[228, "libcasm.clexmonte.SamplingFixtureParams.set_min_sample"]], "set_min_time() (libcasm.clexmonte.samplingfixtureparams method)": [[229, "libcasm.clexmonte.SamplingFixtureParams.set_min_time"]], "to_dict() (libcasm.clexmonte.samplingfixtureparams method)": [[230, "libcasm.clexmonte.SamplingFixtureParams.to_dict"]], "selectedevent (class in libcasm.clexmonte)": [[231, "libcasm.clexmonte.SelectedEvent"]], "event_data (libcasm.clexmonte.selectedevent property)": [[232, "libcasm.clexmonte.SelectedEvent.event_data"]], "event_id (libcasm.clexmonte.selectedevent property)": [[233, "libcasm.clexmonte.SelectedEvent.event_id"]], "event_index (libcasm.clexmonte.selectedevent property)": [[234, "libcasm.clexmonte.SelectedEvent.event_index"]], "event_state (libcasm.clexmonte.selectedevent property)": [[235, "libcasm.clexmonte.SelectedEvent.event_state"]], "prim_event_data (libcasm.clexmonte.selectedevent property)": [[236, "libcasm.clexmonte.SelectedEvent.prim_event_data"]], "time_increment (libcasm.clexmonte.selectedevent property)": [[237, "libcasm.clexmonte.SelectedEvent.time_increment"]], "total_rate (libcasm.clexmonte.selectedevent property)": [[238, "libcasm.clexmonte.SelectedEvent.total_rate"]], "statedata (class in libcasm.clexmonte)": [[239, "libcasm.clexmonte.StateData"]], "clex() (libcasm.clexmonte.statedata method)": [[240, "libcasm.clexmonte.StateData.clex"]], "convert (libcasm.clexmonte.statedata property)": [[241, "libcasm.clexmonte.StateData.convert"]], "corr() (libcasm.clexmonte.statedata method)": [[242, "libcasm.clexmonte.StateData.corr"]], "local_clex() (libcasm.clexmonte.statedata method)": [[243, "libcasm.clexmonte.StateData.local_clex"]], "local_corr() (libcasm.clexmonte.statedata method)": [[244, "libcasm.clexmonte.StateData.local_corr"]], "local_multiclex() (libcasm.clexmonte.statedata method)": [[245, "libcasm.clexmonte.StateData.local_multiclex"]], "local_orbit_composition_calculator() (libcasm.clexmonte.statedata method)": [[246, "libcasm.clexmonte.StateData.local_orbit_composition_calculator"]], "multiclex() (libcasm.clexmonte.statedata method)": [[247, "libcasm.clexmonte.StateData.multiclex"]], "n_unitcells (libcasm.clexmonte.statedata property)": [[248, "libcasm.clexmonte.StateData.n_unitcells"]], "occ_location (libcasm.clexmonte.statedata property)": [[249, "libcasm.clexmonte.StateData.occ_location"]], "order_parameter() (libcasm.clexmonte.statedata method)": [[250, "libcasm.clexmonte.StateData.order_parameter"]], "state (libcasm.clexmonte.statedata property)": [[251, "libcasm.clexmonte.StateData.state"]], "system (libcasm.clexmonte.statedata property)": [[252, "libcasm.clexmonte.StateData.system"]], "transformation_matrix_to_super (libcasm.clexmonte.statedata property)": [[253, "libcasm.clexmonte.StateData.transformation_matrix_to_super"]], "statemodifyingfunction (class in libcasm.clexmonte)": [[254, "libcasm.clexmonte.StateModifyingFunction"]], "description (libcasm.clexmonte.statemodifyingfunction property)": [[255, "libcasm.clexmonte.StateModifyingFunction.description"]], "function (libcasm.clexmonte.statemodifyingfunction property)": [[256, "libcasm.clexmonte.StateModifyingFunction.function"]], "name (libcasm.clexmonte.statemodifyingfunction property)": [[257, "libcasm.clexmonte.StateModifyingFunction.name"]], "statemodifyingfunctionmap (class in libcasm.clexmonte)": [[258, "libcasm.clexmonte.StateModifyingFunctionMap"]], "items() (libcasm.clexmonte.statemodifyingfunctionmap method)": [[259, "libcasm.clexmonte.StateModifyingFunctionMap.items"]], "keys() (libcasm.clexmonte.statemodifyingfunctionmap method)": [[260, "libcasm.clexmonte.StateModifyingFunctionMap.keys"]], "values() (libcasm.clexmonte.statemodifyingfunctionmap method)": [[261, "libcasm.clexmonte.StateModifyingFunctionMap.values"]], "system (class in libcasm.clexmonte)": [[262, "libcasm.clexmonte.System"]], "additional_params (libcasm.clexmonte.system property)": [[263, "libcasm.clexmonte.System.additional_params"]], "basis_set() (libcasm.clexmonte.system method)": [[264, "libcasm.clexmonte.System.basis_set"]], "basis_set_cluster_info() (libcasm.clexmonte.system method)": [[265, "libcasm.clexmonte.System.basis_set_cluster_info"]], "basis_set_keys (libcasm.clexmonte.system property)": [[266, "libcasm.clexmonte.System.basis_set_keys"]], "canonical_swaps() (libcasm.clexmonte.system method)": [[267, "libcasm.clexmonte.System.canonical_swaps"]], "clex() (libcasm.clexmonte.system method)": [[268, "libcasm.clexmonte.System.clex"]], "clex_keys (libcasm.clexmonte.system property)": [[269, "libcasm.clexmonte.System.clex_keys"]], "composition_calculator (libcasm.clexmonte.system property)": [[270, "libcasm.clexmonte.System.composition_calculator"]], "composition_converter (libcasm.clexmonte.system property)": [[271, "libcasm.clexmonte.System.composition_converter"]], "dof_space() (libcasm.clexmonte.system method)": [[272, "libcasm.clexmonte.System.dof_space"]], "dof_space_keys (libcasm.clexmonte.system property)": [[273, "libcasm.clexmonte.System.dof_space_keys"]], "dof_subspace_keys (libcasm.clexmonte.system property)": [[274, "libcasm.clexmonte.System.dof_subspace_keys"]], "equivalents_info() (libcasm.clexmonte.system method)": [[275, "libcasm.clexmonte.System.equivalents_info"]], "event_system (libcasm.clexmonte.system property)": [[276, "libcasm.clexmonte.System.event_system"]], "event_type_names (libcasm.clexmonte.system property)": [[277, "libcasm.clexmonte.System.event_type_names"]], "events() (libcasm.clexmonte.system method)": [[278, "libcasm.clexmonte.System.events"]], "from_dict() (libcasm.clexmonte.system static method)": [[279, "libcasm.clexmonte.System.from_dict"]], "is_basis_set() (libcasm.clexmonte.system method)": [[280, "libcasm.clexmonte.System.is_basis_set"]], "is_clex() (libcasm.clexmonte.system method)": [[281, "libcasm.clexmonte.System.is_clex"]], "is_local_basis_set() (libcasm.clexmonte.system method)": [[282, "libcasm.clexmonte.System.is_local_basis_set"]], "is_local_clex() (libcasm.clexmonte.system method)": [[283, "libcasm.clexmonte.System.is_local_clex"]], "is_local_multiclex() (libcasm.clexmonte.system method)": [[284, "libcasm.clexmonte.System.is_local_multiclex"]], "is_multiclex() (libcasm.clexmonte.system method)": [[285, "libcasm.clexmonte.System.is_multiclex"]], "local_basis_set() (libcasm.clexmonte.system method)": [[286, "libcasm.clexmonte.System.local_basis_set"]], "local_basis_set_cluster_info() (libcasm.clexmonte.system method)": [[287, "libcasm.clexmonte.System.local_basis_set_cluster_info"]], "local_basis_set_keys (libcasm.clexmonte.system property)": [[288, "libcasm.clexmonte.System.local_basis_set_keys"]], "local_clex() (libcasm.clexmonte.system method)": [[289, "libcasm.clexmonte.System.local_clex"]], "local_clex_keys (libcasm.clexmonte.system property)": [[290, "libcasm.clexmonte.System.local_clex_keys"]], "local_multiclex() (libcasm.clexmonte.system method)": [[291, "libcasm.clexmonte.System.local_multiclex"]], "local_multiclex_keys (libcasm.clexmonte.system property)": [[292, "libcasm.clexmonte.System.local_multiclex_keys"]], "local_orbit_composition_calculator() (libcasm.clexmonte.system method)": [[293, "libcasm.clexmonte.System.local_orbit_composition_calculator"]], "local_orbit_composition_calculator_keys (libcasm.clexmonte.system property)": [[294, "libcasm.clexmonte.System.local_orbit_composition_calculator_keys"]], "make_default_configuration() (libcasm.clexmonte.system method)": [[295, "libcasm.clexmonte.System.make_default_configuration"]], "make_default_state() (libcasm.clexmonte.system method)": [[296, "libcasm.clexmonte.System.make_default_state"]], "multiclex() (libcasm.clexmonte.system method)": [[297, "libcasm.clexmonte.System.multiclex"]], "multiclex_keys (libcasm.clexmonte.system property)": [[298, "libcasm.clexmonte.System.multiclex_keys"]], "n_dimensions (libcasm.clexmonte.system property)": [[299, "libcasm.clexmonte.System.n_dimensions"]], "occevent_symgroup_rep() (libcasm.clexmonte.system method)": [[300, "libcasm.clexmonte.System.occevent_symgroup_rep"]], "order_parameter() (libcasm.clexmonte.system method)": [[301, "libcasm.clexmonte.System.order_parameter"]], "order_parameter_subspaces() (libcasm.clexmonte.system method)": [[302, "libcasm.clexmonte.System.order_parameter_subspaces"]], "prim (libcasm.clexmonte.system property)": [[303, "libcasm.clexmonte.System.prim"]], "prim_event_list() (libcasm.clexmonte.system method)": [[304, "libcasm.clexmonte.System.prim_event_list"]], "prim_neighbor_list (libcasm.clexmonte.system property)": [[305, "libcasm.clexmonte.System.prim_neighbor_list"]], "semigrand_canonical_multiswaps() (libcasm.clexmonte.system method)": [[306, "libcasm.clexmonte.System.semigrand_canonical_multiswaps"]], "semigrand_canonical_swaps() (libcasm.clexmonte.system method)": [[307, "libcasm.clexmonte.System.semigrand_canonical_swaps"]], "species_list (libcasm.clexmonte.system property)": [[308, "libcasm.clexmonte.System.species_list"]], "xtal_prim (libcasm.clexmonte.system property)": [[309, "libcasm.clexmonte.System.xtal_prim"]], "enforce_composition() (in module libcasm.clexmonte)": [[310, "libcasm.clexmonte.enforce_composition"]], "make_canonical_initial_state() (in module libcasm.clexmonte)": [[311, "libcasm.clexmonte.make_canonical_initial_state"]], "make_initial_state() (in module libcasm.clexmonte)": [[312, "libcasm.clexmonte.make_initial_state"]], "libcasm.clexmonte.parsing": [[313, "module-libcasm.clexmonte.parsing"]], "optional_from_dict() (in module libcasm.clexmonte.parsing)": [[314, "libcasm.clexmonte.parsing.optional_from_dict"]], "required_array_from_dict() (in module libcasm.clexmonte.parsing)": [[315, "libcasm.clexmonte.parsing.required_array_from_dict"]], "required_from_dict() (in module libcasm.clexmonte.parsing)": [[316, "libcasm.clexmonte.parsing.required_from_dict"]], "required_int_array_from_dict() (in module libcasm.clexmonte.parsing)": [[317, "libcasm.clexmonte.parsing.required_int_array_from_dict"]], "to_dict() (in module libcasm.clexmonte.parsing)": [[318, "libcasm.clexmonte.parsing.to_dict"]], "print_selected_event_functions() (in module libcasm.clexmonte)": [[319, "libcasm.clexmonte.print_selected_event_functions"]], "scale_supercell() (in module libcasm.clexmonte)": [[320, "libcasm.clexmonte.scale_supercell"]]}})